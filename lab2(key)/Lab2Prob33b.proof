\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Oct 23 10:57:23 CEST 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Fri Oct 23 10:57:23 CEST 2015
name=Drawing[Drawing\\:\\:drawVertical(int)].JML normal_behavior operation contract.0
contract=Drawing[Drawing\\:\\:drawVertical(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "venus" ) (keyVersion "f29c982fc6c75827991e94a2a905e3419d01d6ee"))

(autoModeTime "19957")

(branch "dummy ID"
(rule "inInt" (formula "1") (term "1,0,0,0") (newnames "heapAtPre"))
(rule "concrete_and_3" (formula "1") (term "0,0,0"))
(rule "elementOfAllLocs" (formula "1") (term "0,0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,1,0,1,1"))
(rule "simplifyUpdate2" (formula "1") (term "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "6") (term "0"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "6"))
(rule "polySimp_mulLiterals" (formula "6") (term "0"))
(rule "polySimp_elimOne" (formula "6") (term "0"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "concrete_and_3" (formula "9") (term "0,1"))
(rule "Class_invariant_axiom_for_Drawing" (formula "7") (inst "j=j") (inst "i=i") (inst "i_0=i_0") (ifseqformula "3"))
(rule "inInt" (formula "7") (term "1,0,0,0,1"))
(rule "concrete_and_3" (formula "7") (term "0,0,0,1"))
(rule "inInt" (formula "7") (term "1,0,0,1,0"))
(rule "concrete_and_3" (formula "7") (term "0,0,1,0"))
(rule "inInt" (formula "7") (term "1,0,0,0,1"))
(rule "concrete_and_3" (formula "7") (term "0,0,0,1"))
(rule "translateJavaAddInt" (formula "7") (term "0,2,1,0,1,1,1,1,0,0,1"))
(rule "translateJavaSubInt" (formula "7") (term "0,2,0,0,0,1,1,0,0,1"))
(rule "translateJavaAddInt" (formula "7") (term "0,2,0,1,0,1,1,0,0,1"))
(rule "translateJavaSubInt" (formula "7") (term "0,2,1,0,0,1,1,1,0,0,1"))
(rule "translateJavaSubInt" (formula "7") (term "1,1,1,1,0,0,0,1"))
(rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,0,0,0,1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "polySimp_elimSub" (formula "9") (term "0,2,1,0,0,1,1,1,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,2,1,0,0,1,1,1,0,0"))
(rule "polySimp_elimSub" (formula "9") (term "1,1,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "1,1,1,1,1,0,0,0"))
(rule "polySimp_elimSub" (formula "9") (term "1,0,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "1,1,0,1,1,0,0,0"))
(rule "polySimp_elimSub" (formula "9") (term "0,2,0,0,0,1,1,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,2,0,0,0,1,1,0,0"))
(rule "polySimp_addComm0" (formula "9") (term "0,2,0,1,0,1,1,0,0"))
(rule "polySimp_addComm0" (formula "9") (term "0,2,1,0,1,1,1,1,0,0"))
(rule "polySimp_addComm0" (formula "9") (term "0,2,1,0,0,1,1,1,0,0"))
(rule "polySimp_addComm0" (formula "9") (term "1,1,1,1,0,0,0"))
(rule "polySimp_addComm0" (formula "9") (term "1,0,1,1,0,0,0"))
(rule "polySimp_addComm0" (formula "9") (term "0,2,0,0,0,1,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,0,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,1,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,1,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,0,1,1,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,1,0,0,0"))
(rule "nonNull" (formula "7") (inst "i=i"))
(rule "greater_literals" (formula "7") (term "0,1"))
(rule "concrete_impl_1" (formula "7") (term "1"))
(rule "sub_literals" (formula "7") (term "2,1,0,1"))
(rule "nonNullZero" (formula "7") (term "1,0,1"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "9") (term "1,0,0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_imp2or" (formula "9") (term "0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "9") (term "0,0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
(rule "nnf_notAnd" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0"))
(rule "nnf_notAnd" (formula "9") (term "1,1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,1,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,1,1,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,1,1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,1,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,0,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,1,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,1,0,0,0"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_drawVertical,savedHeapBefore_drawVertical,_depthBefore_drawVertical"))
(rule "simplifyUpdate2" (formula "12") (term "1"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "i"))
(rule "assignment" (formula "12") (term "1"))
(rule "sequentialToParallel2" (formula "12"))
(rule "simplifyUpdate3" (formula "12") (term "1,0"))
(rule "commute_and" (formula "9") (term "1,1,1,0,0"))
(rule "commute_and" (formula "9") (term "0,1,1,0,0"))
(rule "shift_paren_or" (formula "9") (term "1,0,0,0"))
(rule "shift_paren_or" (formula "9") (term "0,0,0"))
(rule "commute_or" (formula "9") (term "1,0,0,0,0"))
(rule "shift_paren_or" (formula "9") (term "0,0,0,0"))
(rule "cnf_rightDist" (formula "9") (term "1,1,0,0"))
(rule "commute_or" (formula "9") (term "0,1,1,0,0"))
(rule "cnf_rightDist" (formula "9") (term "1,1,1,0,0"))
(rule "commute_or" (formula "9") (term "1,1,1,1,0,0"))
(rule "cnf_rightDist" (formula "9") (term "0,1,1,0,0"))
(rule "cnf_rightDist" (formula "9") (term "1,0,0"))
(rule "commute_or" (formula "9") (term "1,1,0,0"))
(rule "commute_or" (formula "9") (term "1,1,0,1,0,0"))
(rule "cnf_rightDist" (formula "9") (term "1,1,0,0"))
(rule "commute_or_2" (formula "9") (term "1,1,1,0,0"))
(rule "shift_paren_or" (formula "9") (term "0,1,1,0,0"))
(rule "commute_or" (formula "9") (term "0,1,1,1,0,0"))
(rule "cnf_rightDist" (formula "9") (term "0,1,0,0"))
(rule "commute_or_2" (formula "9") (term "1,0,1,0,0"))
(rule "shift_paren_or" (formula "9") (term "0,0,1,0,0"))
(rule "cnf_rightDist" (formula "9") (term "0,0"))
(rule "distr_forallAnd" (formula "9") (term "0"))
(rule "distr_forallAnd" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "commute_or" (formula "10") (term "0,0"))
(rule "cnf_rightDist" (formula "9") (term "0,0"))
(rule "distr_forallAnd" (formula "9") (term "0"))
(rule "distr_forallAnd" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "commute_or_2" (formula "10") (term "0,0"))
(rule "shift_paren_or" (formula "9") (term "0,0"))
(rule "commute_or_2" (formula "10") (term "0,0,0"))
(rule "shift_paren_or" (formula "9") (term "0,0,0"))
(rule "commute_or" (formula "10") (term "0,0,0,0"))
(rule "commute_or_2" (formula "10") (term "0,0,0"))
(rule "cnf_rightDist" (formula "11") (term "0,0"))
(rule "distr_forallAnd" (formula "11") (term "0"))
(rule "distr_forallAnd" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "commute_or_2" (formula "12") (term "0,0"))
(rule "shift_paren_or" (formula "11") (term "0,0"))
(rule "commute_or_2" (formula "12") (term "0,0,0"))
(rule "shift_paren_or" (formula "11") (term "0,0,0"))
(rule "commute_or" (formula "12") (term "0,0,0,0"))
(rule "arrayLengthIsAShort" (formula "6") (term "0"))
(rule "inShort" (formula "6"))
(rule "true_left" (formula "6"))
(rule "arrayLengthNotNegative" (formula "6") (term "0"))
(rule "arrayLengthNotNegative" (formula "10") (term "1,1,1,0,0,0,0,0"))
(rule "arrayLengthIsAShort" (formula "11") (term "1,1,1,0,0,0,0,0"))
(rule "inShort" (formula "11"))
(rule "true_left" (formula "11"))
(rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,0") (ifseqformula "1"))
(rule "replace_known_right" (formula "7") (term "0") (ifseqformula "16"))
(rule "concrete_or_2" (formula "7"))
(rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "1"))
(builtin "Loop Invariant" (formula "19") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (rule "inInt" (formula "19") (term "1,0,0,1,1,0,1"))
   (rule "concrete_and_3" (formula "19") (term "0,0,1,1,0,1"))
   (rule "ifthenelse_true" (formula "19") (term "1,1,0,1,1,0,1"))
   (rule "simplifyUpdate2" (formula "19"))
   (rule "applyOnRigidFormula" (formula "19"))
   (rule "simplifyUpdate2" (formula "19") (term "1"))
   (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "1"))
   (rule "concrete_and_3" (formula "19"))
   (rule "applyOnRigidFormula" (formula "19"))
   (rule "simplifyUpdate2" (formula "19") (term "0"))
   (rule "applyOnRigidFormula" (formula "19") (term "1"))
   (rule "applyOnRigidFormula" (formula "19") (term "0"))
   (rule "simplifyUpdate1" (formula "19") (term "0,0"))
   (rule "applyOnPV" (formula "19") (term "1,0"))
   (rule "leq_literals" (formula "19") (term "0"))
   (rule "concrete_and_1" (formula "19"))
   (rule "applyOnRigidFormula" (formula "19") (term "1"))
   (rule "applyOnRigidFormula" (formula "19") (term "0"))
   (rule "simplifyUpdate1" (formula "19") (term "0,0"))
   (rule "simplifyUpdate1" (formula "19") (term "1,0"))
   (rule "applyOnPV" (formula "19") (term "0,0"))
   (rule "applyOnRigidFormula" (formula "19") (term "0,1"))
   (rule "simplifyUpdate2" (formula "19") (term "1,0,1"))
   (rule "simplifyUpdate2" (formula "19") (term "0,0,1"))
   (rule "applyOnRigidTerm" (formula "19") (term "1,0"))
   (rule "applyOnRigidFormula" (formula "19") (term "1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "1,1,0,1"))
   (rule "applyOnRigidFormula" (formula "19") (term "0,0,1"))
   (rule "simplifyUpdate2" (formula "19") (term "0,0,0,1"))
   (rule "applyOnRigidTerm" (formula "19") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "19") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "0,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0,1"))
   (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "0,1,0,0,1"))
   (rule "applyOnPV" (formula "19") (term "1,1,0,0,1"))
   (rule "applyOnRigidTerm" (formula "19") (term "2,0,1,0"))
   (rule "applyOnPV" (formula "19") (term "0,2,0,1,0"))
   (rule "applyOnRigidTerm" (formula "19") (term "1,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "0,1,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "1,1,0,1,0,1"))
   (rule "applyOnRigidTerm" (formula "19") (term "2,1,0,1,0,1"))
   (rule "applyOnPV" (formula "19") (term "0,2,1,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
   (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,1"))
   (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
   (rule "mul_literals" (formula "19") (term "1,1,0,0,1"))
   (rule "nnf_imp2or" (formula "19") (term "0,1"))
   (rule "nnf_notAnd" (formula "19") (term "0,0,1"))
   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1"))
   (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0,1"))
   (rule "add_literals" (formula "19") (term "0,0,1,0,0,1"))
   (rule "add_zero_left" (formula "19") (term "0,1,0,0,1"))
   (rule "neq_or_2" (formula "19") (term "0,0,1"))
   (rule "concrete_or_1" (formula "19") (term "0,1"))
   (rule "all_unused" (formula "19") (term "1"))
   (rule "concrete_and_3" (formula "19"))
   (rule "inEqSimp_geqRight" (formula "19"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "cut_direct" (formula "13") (term "0"))
   (branch "CUT: self.canvas[0] = null TRUE"
      (rule "concrete_or_1" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
      (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "13"))
      (rule "applyEq" (formula "17") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "13"))
      (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "13"))
      (rule "applyEq" (formula "14") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "13"))
      (rule "allLeft" (formula "11") (inst "t=depth"))
      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
      (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
      (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,1,0"))
      (rule "leq_literals" (formula "11") (term "0,1,0"))
      (rule "concrete_and_2" (formula "11") (term "1,0"))
      (rule "concrete_or_4" (formula "11") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "6"))
      (rule "qeq_literals" (formula "11") (term "0,0"))
      (rule "concrete_and_2" (formula "11") (term "0"))
      (rule "concrete_or_2" (formula "11"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
      (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
      (rule "qeq_literals" (formula "7") (term "0"))
      (rule "concrete_and_2" (formula "7"))
      (rule "closeFalse" (formula "7"))
   )
   (branch "CUT: self.canvas[0] = null FALSE"
      (rule "concrete_or_2" (formula "13"))
      (rule "allLeft" (formula "11") (inst "t=depth"))
      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
      (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "6"))
      (rule "qeq_literals" (formula "11") (term "0,0,0"))
      (rule "concrete_and_2" (formula "11") (term "0,0"))
      (rule "concrete_or_2" (formula "11") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
      (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0"))
      (rule "leq_literals" (formula "11") (term "0,0"))
      (rule "concrete_and_2" (formula "11") (term "0"))
      (rule "concrete_or_2" (formula "11"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_and_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Body Preserves Invariant"
   (rule "inInt" (formula "18") (term "1,1,1"))
   (rule "concrete_and_3" (formula "18") (term "1,1"))
   (rule "inInt" (formula "18") (term "1,0,0,1,1,1,1"))
   (rule "concrete_and_3" (formula "18") (term "0,0,1,1,1,1"))
   (rule "ifthenelse_true" (formula "18") (term "1,1,0,1,1,1,1"))
   (rule "elementOfAllFields" (formula "21") (term "0,0,0,0,1,0,1,1,0,1,1,1,1,1"))
   (rule "inInt" (formula "21") (term "1,0,0,1,1,0,0,1,1,0,1,1,1,1,1"))
   (rule "concrete_and_3" (formula "21") (term "0,0,1,1,0,0,1,1,0,1,1,1,1,1"))
   (rule "ifthenelse_true" (formula "21") (term "1,1,0,1,1,0,0,1,1,0,1,1,1,1,1"))
   (rule "translateJavaSubInt" (formula "21") (term "0,0,1,1,1"))
   (rule "translateJavaSubInt" (formula "21") (term "0,1,1,1,0,1,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "18"))
   (rule "simplifyUpdate2" (formula "21") (term "1"))
   (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1,1,0,1,1,1,1,1"))
   (rule "polySimp_elimSub" (formula "21") (term "0,0,1,1,1"))
   (rule "polySimp_elimSub" (formula "21") (term "0,1,1,1,0,1,1,1,1,1"))
   (rule "sequentialToParallel2" (formula "18"))
   (rule "simplifyUpdate2" (formula "18"))
   (rule "simplifyUpdate3" (formula "18") (term "1,0"))
   (rule "andLeft" (formula "18"))
   (rule "simplifyUpdate2" (formula "18"))
   (rule "simplifyUpdate3" (formula "18") (term "0"))
   (rule "andLeft" (formula "19"))
   (rule "applyOnParallel" (formula "19") (term "1,0"))
   (rule "simplifyUpdate3" (formula "19") (term "0,1,0"))
   (rule "applyOnParallel" (formula "20") (term "1,0"))
   (rule "simplifyUpdate3" (formula "20") (term "0,1,0"))
   (rule "applyOnElementary" (formula "19") (term "1,1,0"))
   (rule "applyOnElementary" (formula "20") (term "1,1,0"))
   (rule "sequentialToParallel2" (formula "23") (term "1"))
   (rule "simplifyUpdate3" (formula "23") (term "1,0,1"))
   (rule "sequentialToParallel2" (formula "23"))
   (rule "simplifyUpdate2" (formula "23"))
   (rule "simplifyUpdate3" (formula "23") (term "1,0"))
   (rule "applyOnParallel" (formula "23") (term "1,0"))
   (rule "simplifyUpdate3" (formula "23") (term "0,1,0"))
   (rule "applyOnParallel" (formula "23") (term "1,1,0"))
   (rule "simplifyUpdate3" (formula "23") (term "0,1,1,0"))
   (rule "applyOnElementary" (formula "23") (term "1,1,1,0"))
   (rule "sequentialToParallel2" (formula "23"))
   (rule "simplifyUpdate3" (formula "23") (term "1,0"))
   (rule "impRight" (formula "23"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "simplifyUpdate3" (formula "1") (term "1,0"))
   (rule "parallelWithSkip2" (formula "1") (term "0"))
   (rule "applyOnElementary" (formula "24") (term "1,0"))
   (rule "polySimp_addComm0" (formula "24") (term "0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "24") (term "1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "19"))
   (rule "simplifyUpdate1" (formula "19") (term "0"))
   (rule "applyOnPV" (formula "19") (term "1"))
   (rule "applyOnRigidTerm" (formula "20") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "2,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "2,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "0,1,1,1,0,0"))
   (rule "simplifyUpdate1" (formula "24") (term "0,0,1,1,1,0,0"))
   (rule "simplifyUpdate1" (formula "24") (term "2,0,1,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
   (rule "applyOnRigidTerm" (formula "1") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "1") (term "2,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "1") (term "0,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "0,1,1,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "2,0,1,1,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "0,0,1,1,0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "1,0,1,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "applyOnRigidTerm" (formula "1") (term "1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "1,0,1,1,0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "0,1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "0,1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "0,0,1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "0,1,0,1,1,1,0,0"))
   (rule "simplifyUpdate1" (formula "24") (term "0,0,1,0,1,1,1,0,0"))
   (rule "simplifyUpdate1" (formula "24") (term "1,0,1,0,1,1,1,0,0"))
   (rule "applyOnRigidTerm" (formula "1") (term "0,1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "1") (term "1,0,1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "1") (term "0,0,1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "0,1,0,1,1,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "0,0,1,0,1,1,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "1,0,1,0,1,1,0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "2,0,1,0,1,1,0"))
   (rule "applyOnPV" (formula "20") (term "0,2,0,1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "2,0,1,0,1,1,0"))
   (rule "applyOnPV" (formula "21") (term "0,2,0,1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "2,0,1,0,1,1,1,0,0"))
   (rule "applyOnPV" (formula "24") (term "0,2,0,1,0,1,1,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
   (rule "applyOnRigidTerm" (formula "1") (term "2,0,1,0,1,1,0"))
   (rule "applyOnPV" (formula "1") (term "0,2,0,1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "2,0,1,0,1,1,0,0,1,0"))
   (rule "applyOnPV" (formula "24") (term "0,2,0,1,0,1,1,0,0,1,0"))
   (rule "applyOnRigidFormula" (formula "21"))
   (rule "applyOnRigidFormula" (formula "20"))
   (rule "simplifyUpdate1" (formula "20") (term "0"))
   (rule "simplifyUpdate1" (formula "20") (term "1"))
   (rule "applyOnPV" (formula "20") (term "1"))
   (rule "applyOnRigidTerm" (formula "24") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "24") (term "0,1,0,0,1,1,0,1"))
   (rule "applyOnRigidFormula" (formula "21") (term "0"))
   (rule "simplifyUpdate2" (formula "21") (term "0,0"))
   (rule "simplifyUpdate2" (formula "21") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "0"))
   (rule "applyOnRigidTerm" (formula "24") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "24") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "1,0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "19"))
   (rule "applyOnRigidFormula" (formula "21") (term "0,0"))
   (rule "simplifyUpdate2" (formula "21") (term "0,0,0"))
   (rule "applyOnRigidFormula" (formula "21") (term "1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "1,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "0,0"))
   (rule "simplifyUpdate1" (formula "20") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "20") (term "2,0,0"))
   (rule "applyOnPV" (formula "20") (term "0,0,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "2,0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "0,0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "1,0,1,0,1,0"))
   (rule "applyOnPV" (formula "24") (term "0,0,1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "21") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "21") (term "1,1,0,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
   (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "1,0,0"))
   (rule "applyOnPV" (formula "20") (term "0,1,0,0"))
   (rule "simplifyUpdate1" (formula "20") (term "1,1,0,0"))
   (rule "simplifyUpdate1" (formula "20") (term "2,1,0,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "2,0,0"))
   (rule "applyOnPV" (formula "20") (term "0,2,0,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "2,0,1,0,1,0"))
   (rule "applyOnPV" (formula "24") (term "0,2,0,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "24") (term "1,0,1,0,1,0"))
   (rule "applyOnPV" (formula "24") (term "0,1,0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "1,1,0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "24") (term "2,1,0,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "0,1,0,0"))
   (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "1,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "2,1,0,1,0"))
   (rule "applyOnPV" (formula "21") (term "0,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "0,0,1,0,0"))
   (rule "simplifyUpdate1" (formula "21") (term "0,0,0,1,0,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "1,1,0,1,0"))
   (rule "applyOnPV" (formula "21") (term "0,1,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "1,1,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "2,1,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "2,1,0,1,0"))
   (rule "applyOnPV" (formula "21") (term "0,2,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "1,0,0,1,0,0"))
   (rule "applyOnPV" (formula "21") (term "0,1,0,0,1,0,0"))
   (rule "simplifyUpdate1" (formula "21") (term "1,1,0,0,1,0,0"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "pullOutSelect" (formula "24") (term "0,1,0,1,0") (inst "selectSK=arr_131"))
   (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "1"))
   (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
   (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "2") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "25") (term "1"))
   (rule "sequentialToParallel2" (formula "25"))
   (rule "simplifyUpdate3" (formula "25") (term "1,0"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "25") (term "1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=Drawing_canvas_1"))
   (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
   (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
   (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
   (rule "eqSymm" (formula "1") (term "0,0,0"))
   (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "5"))
   (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "25"))
   (rule "concrete_and_4" (formula "1") (term "0,0"))
   (rule "ifthenelse_false" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "9"))
   (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
   (rule "concrete_and_4" (formula "1") (term "1,0,0"))
   (rule "concrete_or_4" (formula "1") (term "0,0"))
   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
   (rule "concrete_and_2" (formula "1") (term "0,0"))
   (rule "ifthenelse_false" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "22") (term "1,0,1,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "21") (term "0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "25") (term "0,1,0,1,0,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "20") (term "0"))
   (rule "nnf_notAnd" (formula "20") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
   (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
   (rule "mul_literals" (formula "20") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "24") (term "0,1,1,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "24") (term "0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,1,0,0,1,1,0,1"))
   (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,1,0,0,1,1,0,1"))
   (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "24") (term "1,0,0,0,1,1,0,0,1,1,0,1"))
   (rule "compound_less_than_comparison_2" (formula "21") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "21") (term "1"))
   (rule "sequentialToParallel2" (formula "21"))
   (rule "simplifyUpdate2" (formula "21"))
   (rule "simplifyUpdate3" (formula "21") (term "1,0"))
   (rule "applyOnElementary" (formula "21") (term "1,0"))
   (rule "applyOnPV" (formula "21") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_3"))
   (rule "eval_order_array_access6" (formula "21") (term "1") (inst "#v0=x_arr"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_1"))
   (rule "eval_order_array_access4" (formula "21") (term "1") (inst "#v0=x_arr_arr"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_arr_1"))
   (rule "assignment_read_attribute_this" (formula "21"))
   (rule "sequentialToParallel2" (formula "21"))
   (rule "simplifyUpdate3" (formula "21") (term "1,0"))
   (rule "applyOnElementary" (formula "21") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
   (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0"))
   (rule "replaceKnownSelect_taclet1_1" (formula "21") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_2" (formula "21") (term "0,1,0"))
   (rule "assignment_array2" (formula "21"))
   (branch "Normal Execution (x_arr_arr_1 != null)"
      (rule "sequentialToParallel2" (formula "21"))
      (rule "simplifyUpdate2" (formula "21"))
      (rule "simplifyUpdate3" (formula "21") (term "1,0"))
      (rule "applyOnElementary" (formula "21") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "21") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "21") (term "1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "21") (term "2,0,1,0"))
      (rule "applyOnPV" (formula "21") (term "0,2,0,1,0"))
      (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_132"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
      (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
      (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0,0"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "8"))
      (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
      (rule "concrete_and_4" (formula "1") (term "1,0,0"))
      (rule "concrete_or_4" (formula "1") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "23"))
      (rule "concrete_and_4" (formula "1") (term "0,0"))
      (rule "ifthenelse_false" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "assignment_read_length" (formula "21"))
      (branch "Normal Execution (x_arr_1 != null)"
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
         (rule "less_than_comparison_simple" (formula "21") (term "1"))
         (rule "sequentialToParallel2" (formula "21"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "simplifyUpdate3" (formula "21") (term "1,0"))
         (rule "applyOnElementary" (formula "21") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
         (rule "applyOnRigidFormula" (formula "21") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "0,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "21") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "0,0,0,1,0"))
         (rule "applyOnPV" (formula "21") (term "1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "21") (term "1"))
         (rule "simplifyUpdate2" (formula "21"))
         (rule "emptyModality" (formula "21") (term "1"))
         (rule "notRight" (formula "21"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "ifthenelse_concrete3" (formula "1"))
         (rule "boolean_not_equal_2" (formula "1") (term "1"))
         (rule "concrete_or_4" (formula "1"))
         (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
         (rule "add_literals" (formula "20") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "20") (term "1,0,0"))
         (rule "add_zero_right" (formula "20") (term "0,0"))
         (rule "qeq_literals" (formula "20") (term "0"))
         (rule "concrete_or_1" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "ifUnfold" (formula "23") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_7"))
         (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v1=x_9") (inst "#v0=x_8"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_8"))
         (rule "assignment" (formula "23") (term "1"))
         (rule "sequentialToParallel2" (formula "23"))
         (rule "simplifyUpdate3" (formula "23") (term "1,0"))
         (rule "applyOnElementary" (formula "23") (term "1,0"))
         (rule "applyOnPV" (formula "23") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_9"))
         (rule "eval_order_array_access6" (formula "23") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_3"))
         (rule "eval_order_array_access4" (formula "23") (term "1") (inst "#v0=x_arr_arr"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_arr_3"))
         (rule "assignment_read_attribute_this" (formula "23"))
         (rule "sequentialToParallel2" (formula "23"))
         (rule "simplifyUpdate3" (formula "23") (term "1,0"))
         (rule "applyOnElementary" (formula "23") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "23") (term "2,0,1,0"))
         (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0"))
         (rule "replaceKnownSelect_taclet1_1" (formula "23") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_2" (formula "23") (term "0,1,0"))
         (rule "assignment_array2" (formula "23"))
         (branch "Normal Execution (x_arr_arr_3 != null)"
            (rule "sequentialToParallel2" (formula "23"))
            (rule "simplifyUpdate2" (formula "23"))
            (rule "simplifyUpdate3" (formula "23") (term "1,0"))
            (rule "applyOnElementary" (formula "23") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "23") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "23") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "23") (term "1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "23") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "23") (term "0,2,0,1,0"))
            (rule "replaceKnownSelect_taclet01_4" (formula "23") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet01_5" (formula "23") (term "0,1,0"))
            (rule "assignment_read_length" (formula "23"))
            (branch "Normal Execution (x_arr_3 != null)"
               (rule "sequentialToParallel2" (formula "23"))
               (rule "simplifyUpdate2" (formula "23"))
               (rule "simplifyUpdate3" (formula "23") (term "1,0"))
               (rule "applyOnElementary" (formula "23") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
               (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
               (rule "allLeft" (formula "11") (inst "t=depth"))
               (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "6"))
               (rule "qeq_literals" (formula "11") (term "0,0,0"))
               (rule "concrete_and_2" (formula "11") (term "0,0"))
               (rule "concrete_or_2" (formula "11") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
               (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,0"))
               (rule "leq_literals" (formula "11") (term "0,0"))
               (rule "concrete_and_2" (formula "11") (term "0"))
               (rule "concrete_or_2" (formula "11"))
               (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "24") (term "1,0,1,0,0,0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
               (rule "allLeft" (formula "10") (inst "t=depth"))
               (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "6"))
               (rule "qeq_literals" (formula "10") (term "0,0,0"))
               (rule "concrete_and_2" (formula "10") (term "0,0"))
               (rule "concrete_or_2" (formula "10") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,0"))
               (rule "leq_literals" (formula "10") (term "0,0"))
               (rule "concrete_and_2" (formula "10") (term "0"))
               (rule "concrete_or_2" (formula "10"))
               (rule "notLeft" (formula "10"))
               (rule "less_than_comparison_simple" (formula "25") (term "1"))
               (rule "sequentialToParallel2" (formula "25"))
               (rule "simplifyUpdate2" (formula "25"))
               (rule "simplifyUpdate3" (formula "25") (term "1,0"))
               (rule "applyOnElementary" (formula "25") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0"))
               (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "0,0,0,1,0"))
               (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "0,0,0,1,0"))
               (rule "applyOnPV" (formula "25") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0"))
               (rule "replace_known_left" (formula "25") (term "0,0,1,0") (ifseqformula "1"))
               (rule "ifthenelse_true" (formula "25") (term "0,1,0"))
               (rule "ifSplit" (formula "25"))
               (branch "if x_7 true"
                  (rule "simplifyUpdate2" (formula "26"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "boolean_equal" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "eval_order_array_access1" (formula "25") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "25") (term "1"))
                  (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_arr_4"))
                  (rule "eval_order_array_access4" (formula "25") (term "1") (inst "#v0=x_arr_arr"))
                  (rule "variableDeclarationAssign" (formula "25") (term "1"))
                  (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_arr_arr_4"))
                  (rule "assignment_read_attribute_this" (formula "25"))
                  (rule "sequentialToParallel2" (formula "25"))
                  (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                  (rule "applyOnElementary" (formula "25") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0"))
                  (rule "replaceKnownSelect_taclet1_1" (formula "25") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_2" (formula "25") (term "0,1,0"))
                  (rule "assignment_array2" (formula "25"))
                  (branch "Normal Execution (x_arr_arr_4 != null)"
                     (rule "sequentialToParallel2" (formula "25"))
                     (rule "simplifyUpdate2" (formula "25"))
                     (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                     (rule "applyOnElementary" (formula "25") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
                     (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "25") (term "1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "25") (term "2,0,1,0"))
                     (rule "applyOnPV" (formula "25") (term "0,2,0,1,0"))
                     (rule "replaceKnownSelect_taclet01_4" (formula "25") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet01_5" (formula "25") (term "0,1,0"))
                     (rule "assignment_to_primitive_array_component" (formula "25"))
                     (branch "Normal Execution (x_arr_4 != null)"
                        (rule "sequentialToParallel2" (formula "25"))
                        (rule "simplifyUpdate2" (formula "25"))
                        (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                        (rule "applyOnElementary" (formula "25") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "3,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "2,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,2,0,1,0"))
                        (rule "postincrement" (formula "25") (term "1"))
                        (rule "compound_int_cast_expression" (formula "25") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "25") (term "1"))
                        (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_10"))
                        (rule "remove_parentheses_right" (formula "25") (term "1"))
                        (rule "assignmentAdditionInt" (formula "25") (term "1"))
                        (rule "translateJavaAddInt" (formula "25") (term "0,0,1"))
                        (rule "sequentialToParallel2" (formula "25"))
                        (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                        (rule "applyOnElementary" (formula "25") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,1,0"))
                        (rule "widening_identity_cast_5" (formula "25") (term "1"))
                        (rule "assignment" (formula "25") (term "1"))
                        (rule "sequentialToParallel2" (formula "25"))
                        (rule "simplifyUpdate2" (formula "25"))
                        (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                        (rule "applyOnElementary" (formula "25") (term "1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0"))
                        (rule "tryEmpty" (formula "25") (term "1"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "emptyModality" (formula "25") (term "1"))
                        (rule "applyOnRigidFormula" (formula "25"))
                        (rule "simplifyUpdate2" (formula "25") (term "0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,1"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0"))
                        (rule "boolean_not_equal_2" (formula "25") (term "0,0"))
                        (rule "concrete_impl_2" (formula "25") (term "0"))
                        (rule "concrete_and_1" (formula "25"))
                        (rule "impRight" (formula "25"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "26"))
                        (rule "simplifyUpdate2" (formula "26") (term "1"))
                        (rule "simplifyUpdate2" (formula "26") (term "0"))
                        (rule "applyOnRigidFormula" (formula "22"))
                        (rule "applyOnPV" (formula "22") (term "0"))
                        (rule "simplifyUpdate1" (formula "22") (term "1"))
                        (rule "boolean_not_equal_2" (formula "22"))
                        (rule "false_right" (formula "22"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,1"))
                        (rule "applyOnPV" (formula "25") (term "1,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,0,1"))
                        (rule "mul_literals" (formula "25") (term "0,0,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,0,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "1,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "2,0,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,2,0,1,0,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,1"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,1"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,0,1,0,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,1,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,1,1,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,1,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,1,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "1,0,0,0,1,0"))
                        (rule "precOfInt" (formula "25") (term "1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,1,0,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,0,0,1,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,0,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "25") (term "1,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,0,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "25") (term "0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,1,0,1"))
                        (rule "replaceKnownSelect_taclet1_1" (formula "25") (term "1,0,1,1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1_2" (formula "25") (term "1,0,1,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1,1"))
                        (rule "replaceKnownSelect_taclet1_1" (formula "25") (term "1,0,1,0,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1_2" (formula "25") (term "1,0,1,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,1,0,0,1,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "1,1,0,0,1,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,0,1,0,1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0,1,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,1,0,1,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "2,0,0,0,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,2,0,0,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,0,0,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,0,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,0,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,1,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,0,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "1,1,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "0,1,0,1,0,1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,0,1,0,1,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,0,1,0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet1_1" (formula "25") (term "1,0,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1_2" (formula "25") (term "1,0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,1,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,1,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,1,0,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "2,1,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,2,1,0,0,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "25") (term "0,1,1,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,1,1,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "25") (term "1,1,0,1,0,1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,1,1,0,1,0,1,1,0,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0,1,0,1,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,1,1,0,1,0,1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "2,1,0,1,0,1,1,0,0"))
                        (rule "applyOnPV" (formula "25") (term "0,2,1,0,1,0,1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,1,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,1,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "25") (term "2,0,0,1,1,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "25") (term "0,0,0,1,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,1"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,1"))
                        (rule "add_zero_left" (formula "25") (term "0,0,0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0,1,1"))
                        (rule "add_literals" (formula "25") (term "1,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "25") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "25") (term "0,0,1,1"))
                        (rule "dismissNonSelectedField" (formula "25") (term "1,1,0,1,0,1,1,0,0"))
                        (rule "replaceKnownSelect_taclet1_1" (formula "25") (term "1,1,0,1,0,1,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1_2" (formula "25") (term "1,1,0,1,0,1,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1"))
                        (rule "times_zero_2" (formula "25") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,0") (ifseqformula "20"))
                        (rule "leq_literals" (formula "25") (term "0,0,0,0"))
                        (rule "concrete_or_1" (formula "25") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "25") (term "0,0"))
                        (rule "pullOutSelect" (formula "25") (term "0,0,1,1") (inst "selectSK=arr_134"))
                        (rule "applyEq" (formula "26") (term "0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "26") (term "0,0,0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "replaceKnownSelect_taclet01_4" (formula "1") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01_5" (formula "1") (term "2,0"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "24"))
                        (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "26") (term "0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "26") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "applyEq" (formula "25") (term "0,0,0,0") (ifseqformula "11"))
                        (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "1"))
                        (rule "concrete_and_1" (formula "25") (term "0,0"))
                        (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq0" (formula "25") (term "1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,1"))
                        (rule "add_literals" (formula "25") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "25") (term "0,1,1"))
                        (rule "qeq_literals" (formula "25") (term "1,1"))
                        (rule "concrete_and_3" (formula "25") (term "1"))
                        (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "11"))
                        (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "1"))
                        (rule "concrete_and_3" (formula "25"))
                        (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                        (rule "inShort" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                        (rule "cut_direct" (formula "14") (term "0"))
                        (branch "CUT: self.canvas[0] = null TRUE"
                           (rule "concrete_or_1" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "18") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "17") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "14"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,1,0,0,1,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "23"))
                           (rule "concrete_or_2" (formula "21"))
                           (rule "andRight" (formula "26"))
                           (branch "Case 1"
                              (rule "allRight" (formula "26") (inst "sk=x_11"))
                              (rule "orRight" (formula "26"))
                              (rule "orRight" (formula "26"))
                              (rule "inEqSimp_leqRight" (formula "26"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_138"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "29"))
                              (rule "false_to_not_true" (formula "1"))
                              (rule "ifthenelse_concrete3" (formula "1") (term "0"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "25"))
                              (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "25"))
                              (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0"))
                              (rule "qeq_literals" (formula "25") (term "0"))
                              (rule "concrete_and_2" (formula "25"))
                              (rule "false_right" (formula "25"))
                              (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_139"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "1") (term "0,0"))
                              (rule "ifthenelse_true" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                              (rule "leq_literals" (formula "23") (term "0"))
                              (rule "concrete_or_1" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "hideAuxiliaryEqConcrete2" (formula "29"))
                              (rule "allLeft" (formula "24") (inst "t=x_11"))
                              (rule "replaceKnownSelect_taclet0000000001_9" (formula "24") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000001_10" (formula "24") (term "0,1"))
                              (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "26"))
                              (rule "concrete_or_4" (formula "24"))
                              (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "24") (term "0,0,1"))
                              (rule "leq_literals" (formula "24") (term "0,1"))
                              (rule "concrete_and_2" (formula "24") (term "1"))
                              (rule "concrete_or_4" (formula "24"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "24"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (rule "concrete_and_2" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "26") (inst "sk=f_1"))
                              (rule "allRight" (formula "26") (inst "sk=o_1"))
                              (rule "orRight" (formula "26"))
                              (rule "orRight" (formula "26"))
                              (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=f_1_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "29"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
                              (rule "concrete_and_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "28"))
                              (rule "concrete_or_4" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
                              (rule "concrete_and_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "close" (formula "29") (ifseqformula "1"))
                           )
                        )
                        (branch "CUT: self.canvas[0] = null FALSE"
                           (rule "concrete_or_2" (formula "14"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,1,0,0,1,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "24"))
                           (rule "concrete_or_2" (formula "21"))
                           (rule "andRight" (formula "27"))
                           (branch "Case 1"
                              (rule "allRight" (formula "27") (inst "sk=x_0"))
                              (rule "orRight" (formula "27"))
                              (rule "orRight" (formula "27"))
                              (rule "inEqSimp_geqRight" (formula "28"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "28"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_135"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "30"))
                              (rule "false_to_not_true" (formula "1"))
                              (rule "ifthenelse_concrete3" (formula "1") (term "0"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "25"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "25"))
                              (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0"))
                              (rule "qeq_literals" (formula "25") (term "0"))
                              (rule "concrete_and_2" (formula "25"))
                              (rule "false_right" (formula "25"))
                              (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_136"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "1") (term "0,0"))
                              (rule "ifthenelse_true" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                              (rule "leq_literals" (formula "23") (term "0"))
                              (rule "concrete_or_1" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "hideAuxiliaryEqConcrete2" (formula "30"))
                              (rule "allLeft" (formula "24") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "24") (term "0,0"))
                              (rule "concrete_or_2" (formula "24") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (rule "concrete_and_2" (formula "24") (term "0"))
                              (rule "concrete_or_2" (formula "24"))
                              (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_137"))
                              (rule "simplifySelectOfAnon" (formula "24"))
                              (rule "elementOfFreshLocs" (formula "24") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "24") (term "0,0,0,0"))
                              (rule "eqClose" (formula "24") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "24") (term "0,0,0"))
                              (rule "equalUnique" (formula "24") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "24") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "24") (term "0,0"))
                              (rule "ifthenelse_true" (formula "24") (term "0"))
                              (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "allLeft" (formula "25") (inst "t=x_0"))
                              (rule "replaceKnownSelect_taclet0100000001_9" (formula "25") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0100000001_10" (formula "25") (term "0,1"))
                              (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "27"))
                              (rule "concrete_or_4" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "25") (term "0,0"))
                              (rule "concrete_and_2" (formula "25") (term "0"))
                              (rule "concrete_or_2" (formula "25"))
                              (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "3"))
                              (rule "andLeft" (formula "25"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,1,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0"))
                              (rule "add_zero_right" (formula "25") (term "0"))
                              (rule "leq_literals" (formula "25"))
                              (rule "closeFalse" (formula "25"))
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "27") (inst "sk=f_0"))
                              (rule "allRight" (formula "27") (inst "sk=o_0"))
                              (rule "orRight" (formula "27"))
                              (rule "orRight" (formula "27"))
                              (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "30"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "28"))
                              (rule "concrete_and_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "29"))
                              (rule "concrete_or_4" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "28"))
                              (rule "concrete_and_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "close" (formula "30") (ifseqformula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (x_arr_4 = null)"
                        (rule "false_right" (formula "26"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "close" (formula "23") (ifseqformula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr_4 != null, but i Out of Bounds!)"
                        (rule "false_right" (formula "26"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "simplifyUpdate2" (formula "1") (term "1"))
                        (rule "applyOnRigidFormula" (formula "23"))
                        (rule "applyOnPV" (formula "23") (term "0"))
                        (rule "simplifyUpdate1" (formula "23") (term "1"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                        (rule "applyOnPV" (formula "1") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "1"))
                        (rule "applyOnPV" (formula "1") (term "0,1"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                        (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                        (rule "applyOnPV" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                        (rule "concrete_and_2" (formula "1") (term "0"))
                        (rule "concrete_or_2" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (rule "concrete_and_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (x_arr_arr_4 = null)"
                     (rule "false_right" (formula "26"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "close" (formula "24") (ifseqformula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr_arr_4 != null, but _depth Out of Bounds!)"
                     (rule "false_right" (formula "26"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1") (term "1"))
                     (rule "applyOnRigidFormula" (formula "23"))
                     (rule "simplifyUpdate1" (formula "23") (term "1"))
                     (rule "applyOnPV" (formula "23") (term "0"))
                     (rule "applyOnRigidFormula" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                     (rule "applyOnPV" (formula "1") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                     (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                     (rule "applyOnPV" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (rule "concrete_and_2" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (rule "concrete_and_2" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "if x_7 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "26"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "22"))
                  (rule "applyOnPV" (formula "22") (term "0"))
                  (rule "simplifyUpdate1" (formula "22") (term "1"))
                  (rule "boolean_equal" (formula "22"))
                  (rule "closeTrue" (formula "22"))
               )
            )
            (branch "Null Reference (x_arr_3 = null)"
               (rule "false_right" (formula "24"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "21") (term "0,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "21") (term "1,0,1,0") (ifseqformula "1"))
               (rule "allLeft" (formula "11") (inst "t=depth"))
               (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "1"))
               (rule "concrete_not_1" (formula "11") (term "1"))
               (rule "concrete_or_4" (formula "11"))
               (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "11") (term "0,0"))
               (rule "concrete_and_2" (formula "11") (term "0"))
               (rule "concrete_or_2" (formula "11"))
               (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "11"))
               (rule "andLeft" (formula "10"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "times_zero_1" (formula "10") (term "1,0"))
               (rule "add_zero_right" (formula "10") (term "0"))
               (rule "leq_literals" (formula "10"))
               (rule "closeFalse" (formula "10"))
            )
         )
         (branch "Null Reference (x_arr_arr_3 = null)"
            (rule "false_right" (formula "24"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "close" (formula "22") (ifseqformula "1"))
         )
         (branch "Index Out of Bounds (x_arr_arr_3 != null, but _depth Out of Bounds!)"
            (rule "false_right" (formula "24"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate2" (formula "1") (term "1"))
            (rule "applyOnRigidFormula" (formula "22"))
            (rule "simplifyUpdate1" (formula "22") (term "1"))
            (rule "applyOnPV" (formula "22") (term "0"))
            (rule "applyOnRigidFormula" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "0,0"))
            (rule "simplifyUpdate1" (formula "1") (term "1,0"))
            (rule "applyOnPV" (formula "1") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0,1"))
            (rule "simplifyUpdate1" (formula "1") (term "1,1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
            (rule "applyOnPV" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (rule "concrete_and_2" (formula "1") (term "0"))
            (rule "concrete_or_2" (formula "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
            (rule "qeq_literals" (formula "1") (term "0"))
            (rule "concrete_and_2" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (x_arr_1 = null)"
         (rule "false_right" (formula "22"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyEq" (formula "21") (term "1,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "21") (term "0,1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "24") (term "0,1,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "24") (term "0,1,0,1,1,1,0,0,0") (ifseqformula "1"))
         (rule "ifUnfold" (formula "24") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_4"))
         (rule "compound_less_than_comparison_2" (formula "24") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_5"))
         (rule "assignment" (formula "24") (term "1"))
         (rule "sequentialToParallel2" (formula "24"))
         (rule "simplifyUpdate3" (formula "24") (term "1,0"))
         (rule "applyOnElementary" (formula "24") (term "1,0"))
         (rule "applyOnPV" (formula "24") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_6"))
         (rule "eval_order_access2" (formula "24") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_2"))
         (rule "eval_order_array_access4" (formula "24") (term "1") (inst "#v0=x_arr_arr"))
         (rule "variableDeclarationAssign" (formula "24") (term "1"))
         (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_arr_2"))
         (rule "assignment_read_attribute_this" (formula "24"))
         (rule "sequentialToParallel2" (formula "24"))
         (rule "simplifyUpdate3" (formula "24") (term "1,0"))
         (rule "applyOnElementary" (formula "24") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "24") (term "0,1,0"))
         (rule "applyOnPV" (formula "24") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "24") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "24") (term "2,0,1,0"))
         (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=Drawing_canvas_2"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
         (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "24"))
         (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
         (rule "concrete_and_1" (formula "1") (term "1,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
         (rule "concrete_or_2" (formula "1") (term "0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
         (rule "concrete_not_1" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "assignment_array2" (formula "24"))
         (branch "Normal Execution (x_arr_arr_2 != null)"
            (rule "sequentialToParallel2" (formula "24"))
            (rule "simplifyUpdate2" (formula "24"))
            (rule "simplifyUpdate3" (formula "24") (term "1,0"))
            (rule "applyOnElementary" (formula "24") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "24") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "24") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "24") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "24") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "24") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "24") (term "1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "24") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "24") (term "0,2,0,1,0"))
            (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_133"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
            (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
            (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "23"))
            (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
            (rule "concrete_and_1" (formula "1") (term "1,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
            (rule "concrete_or_2" (formula "1") (term "0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
            (rule "concrete_not_1" (formula "1") (term "0,0"))
            (rule "ifthenelse_false" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "assignment_read_length" (formula "24"))
            (branch "Normal Execution (x_arr_2 != null)"
               (rule "sequentialToParallel2" (formula "24"))
               (rule "simplifyUpdate2" (formula "24"))
               (rule "simplifyUpdate3" (formula "24") (term "1,0"))
               (rule "applyOnElementary" (formula "24") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "24") (term "0,1,0"))
               (rule "applyOnPV" (formula "24") (term "0,0,1,0"))
               (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "1"))
               (rule "allLeft" (formula "10") (inst "t=depth"))
               (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "1"))
               (rule "concrete_not_1" (formula "10") (term "1"))
               (rule "concrete_or_4" (formula "10"))
               (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "6"))
               (rule "qeq_literals" (formula "10") (term "0,0"))
               (rule "concrete_and_2" (formula "10") (term "0"))
               (rule "concrete_or_2" (formula "10"))
               (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "9"))
               (rule "andLeft" (formula "10"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
               (rule "add_literals" (formula "10") (term "1,1,0"))
               (rule "times_zero_1" (formula "10") (term "1,0"))
               (rule "add_zero_right" (formula "10") (term "0"))
               (rule "leq_literals" (formula "10"))
               (rule "closeFalse" (formula "10"))
            )
            (branch "Null Reference (x_arr_2 = null)"
               (rule "false_right" (formula "25"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "allLeft" (formula "10") (inst "t=depth"))
               (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "1"))
               (rule "concrete_not_1" (formula "10") (term "1"))
               (rule "concrete_or_4" (formula "10"))
               (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
               (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
               (rule "add_literals" (formula "10") (term "0,0,1"))
               (rule "leq_literals" (formula "10") (term "0,1"))
               (rule "concrete_and_2" (formula "10") (term "1"))
               (rule "concrete_or_4" (formula "10"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "10"))
               (rule "qeq_literals" (formula "6") (term "0"))
               (rule "concrete_and_2" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
         (branch "Null Reference (x_arr_arr_2 = null)"
            (rule "false_right" (formula "25"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "close" (formula "23") (ifseqformula "1"))
         )
         (branch "Index Out of Bounds (x_arr_arr_2 != null, but _depth Out of Bounds!)"
            (rule "false_right" (formula "25"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate2" (formula "1") (term "1"))
            (rule "applyOnRigidFormula" (formula "23"))
            (rule "applyOnPV" (formula "23") (term "0"))
            (rule "simplifyUpdate1" (formula "23") (term "1"))
            (rule "applyOnRigidFormula" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "0,0"))
            (rule "simplifyUpdate1" (formula "1") (term "1,0"))
            (rule "applyOnPV" (formula "1") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "1") (term "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1,1"))
            (rule "applyOnPV" (formula "1") (term "0,1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
            (rule "applyOnPV" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (rule "concrete_and_2" (formula "1") (term "0"))
            (rule "concrete_or_2" (formula "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
            (rule "qeq_literals" (formula "1") (term "0"))
            (rule "concrete_and_2" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (x_arr_arr_1 = null)"
      (rule "false_right" (formula "22"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "close" (formula "22") (ifseqformula "1"))
   )
   (branch "Index Out of Bounds (x_arr_arr_1 != null, but _depth Out of Bounds!)"
      (rule "false_right" (formula "22"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate2" (formula "1") (term "1"))
      (rule "applyOnRigidFormula" (formula "22"))
      (rule "applyOnPV" (formula "22") (term "0"))
      (rule "simplifyUpdate1" (formula "22") (term "1"))
      (rule "applyOnRigidFormula" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "0,0"))
      (rule "simplifyUpdate1" (formula "1") (term "1,0"))
      (rule "applyOnPV" (formula "1") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0,1"))
      (rule "simplifyUpdate1" (formula "1") (term "1,1"))
      (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
      (rule "applyOnPV" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_and_2" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_and_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (rule "false_to_not_true" (formula "21") (term "0,0,1,1"))
   (rule "inInt" (formula "18") (term "1,1,1"))
   (rule "concrete_and_3" (formula "18") (term "1,1"))
   (rule "inInt" (formula "18") (term "1,0,0,1,1,1,1"))
   (rule "concrete_and_3" (formula "18") (term "0,0,1,1,1,1"))
   (rule "ifthenelse_true" (formula "18") (term "1,1,0,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "18"))
   (rule "sequentialToParallel2" (formula "21"))
   (rule "simplifyUpdate2" (formula "21"))
   (rule "simplifyUpdate3" (formula "21") (term "1,0"))
   (rule "applyOnParallel" (formula "21") (term "1,0"))
   (rule "simplifyUpdate3" (formula "21") (term "0,1,0"))
   (rule "applyOnElementary" (formula "21") (term "1,1,0"))
   (rule "sequentialToParallel2" (formula "18"))
   (rule "simplifyUpdate2" (formula "18"))
   (rule "simplifyUpdate3" (formula "18") (term "1,0"))
   (rule "andLeft" (formula "18"))
   (rule "simplifyUpdate2" (formula "18"))
   (rule "simplifyUpdate3" (formula "18") (term "0"))
   (rule "andLeft" (formula "19"))
   (rule "applyOnParallel" (formula "19") (term "1,0"))
   (rule "simplifyUpdate3" (formula "19") (term "0,1,0"))
   (rule "applyOnParallel" (formula "20") (term "1,0"))
   (rule "simplifyUpdate3" (formula "20") (term "0,1,0"))
   (rule "applyOnElementary" (formula "19") (term "1,1,0"))
   (rule "applyOnElementary" (formula "20") (term "1,1,0"))
   (rule "applyOnRigidTerm" (formula "23") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "23") (term "2,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "23") (term "0,0,1,1,0"))
   (rule "applyOnRigidFormula" (formula "18"))
   (rule "applyOnPV" (formula "18") (term "1"))
   (rule "simplifyUpdate1" (formula "18") (term "0"))
   (rule "applyOnRigidFormula" (formula "19"))
   (rule "simplifyUpdate1" (formula "19") (term "0"))
   (rule "simplifyUpdate1" (formula "19") (term "1"))
   (rule "applyOnPV" (formula "19") (term "0"))
   (rule "applyOnRigidFormula" (formula "20"))
   (rule "applyOnRigidTerm" (formula "23") (term "1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "19") (term "1"))
   (rule "applyOnRigidFormula" (formula "20") (term "0"))
   (rule "simplifyUpdate2" (formula "20") (term "1,0"))
   (rule "simplifyUpdate2" (formula "20") (term "0,0"))
   (rule "applyOnRigidTerm" (formula "23") (term "0,1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "23") (term "0,0,1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "19") (term "0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "0,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "2,0,1"))
   (rule "applyOnPV" (formula "19") (term "0,0,1"))
   (rule "applyOnRigidTerm" (formula "20") (term "0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "2,0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "20") (term "0,0"))
   (rule "simplifyUpdate2" (formula "20") (term "0,0,0"))
   (rule "applyOnRigidTerm" (formula "23") (term "2,0,1,0,1,1,0"))
   (rule "applyOnPV" (formula "23") (term "0,2,0,1,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "19") (term "1,0,1"))
   (rule "applyOnPV" (formula "19") (term "0,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "1,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "2,1,0,1"))
   (rule "applyOnRigidTerm" (formula "19") (term "2,0,1"))
   (rule "applyOnPV" (formula "19") (term "0,2,0,1"))
   (rule "applyOnRigidTerm" (formula "19") (term "0,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "0,0,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "2,0,0,1"))
   (rule "applyOnRigidTerm" (formula "20") (term "1,0,1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "20") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,1,0,0"))
   (rule "applyOnPV" (formula "20") (term "1,1,0,0"))
   (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "0,0,1,0,1"))
   (rule "applyOnRigidTerm" (formula "19") (term "1,0,0,1"))
   (rule "applyOnRigidFormula" (formula "20") (term "1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "1,1,0"))
   (rule "applyOnRigidTerm" (formula "19") (term "1,0,1,0,1"))
   (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "0,0,1,0,0,1"))
   (rule "applyOnRigidTerm" (formula "20") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "2,0,1,0"))
   (rule "applyOnPV" (formula "20") (term "0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "19") (term "0,0,1,0,1,0,1"))
   (rule "applyOnRigidTerm" (formula "19") (term "2,0,1,0,0,1"))
   (rule "applyOnPV" (formula "19") (term "0,2,0,1,0,0,1"))
   (rule "applyOnRigidTerm" (formula "20") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "1,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "2,1,0,1,0"))
   (rule "applyOnPV" (formula "20") (term "0,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "0,1,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "19") (term "2,0,1,0,1,0,1"))
   (rule "applyOnPV" (formula "19") (term "0,2,0,1,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "1,1,0,1,0"))
   (rule "applyOnPV" (formula "20") (term "0,1,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "1,1,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "2,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "18"))
   (rule "applyOnRigidTerm" (formula "20") (term "2,1,0,1,0"))
   (rule "applyOnPV" (formula "20") (term "0,2,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "0,1,0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "2,0,1,0,0,1,0"))
   (rule "applyOnPV" (formula "20") (term "0,2,0,1,0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "0,1,0,1,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0,1,1,0,1,0"))
   (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0,1,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "2,0,1,0,1,0,1,0"))
   (rule "applyOnPV" (formula "20") (term "0,2,0,1,0,1,0,1,0"))
   (rule "applyOnRigidTerm" (formula "20") (term "2,0,1,0,1,1,0,1,0"))
   (rule "applyOnPV" (formula "20") (term "0,2,0,1,0,1,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "19"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "b_1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
   (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
   (rule "pullOutSelect" (formula "20") (term "1,0,1,0") (inst "selectSK=arr_0"))
   (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
   (rule "simplifySelectOfAnon" (formula "20"))
   (rule "elementOfFreshLocs" (formula "20") (term "1,0,0"))
   (rule "elementOfAllFields" (formula "20") (term "0,0,0,0"))
   (rule "equalUnique" (formula "20") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "20") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "20") (term "0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "20") (term "0,0,0"))
   (rule "pullOutSelect" (formula "20") (term "1,2,0") (inst "selectSK=Drawing_canvas_0"))
   (rule "applyEq" (formula "21") (term "1,0,0,1,1,0,0") (ifseqformula "20"))
   (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "20"))
   (rule "applyEq" (formula "21") (term "0,0,0,0,0") (ifseqformula "20"))
   (rule "applyEq" (formula "21") (term "0,0,0,1,0,0") (ifseqformula "20"))
   (rule "simplifySelectOfAnon" (formula "20"))
   (rule "elementOfFreshLocs" (formula "20") (term "1,0,0"))
   (rule "elementOfAllFields" (formula "20") (term "0,0,0,0"))
   (rule "equalUnique" (formula "20") (term "0,1,0,0,0"))
   (rule "concrete_not_2" (formula "20") (term "1,0,0,0"))
   (rule "concrete_and_3" (formula "20") (term "0,0,0"))
   (rule "eqSymm" (formula "20") (term "0,0,0"))
   (rule "replace_known_right" (formula "20") (term "0,0,1,0,0") (ifseqformula "24"))
   (rule "concrete_not_2" (formula "20") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "20") (term "1,0,0"))
   (rule "replace_known_left" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
   (rule "concrete_not_1" (formula "20") (term "1,0,0"))
   (rule "concrete_or_4" (formula "20") (term "0,0"))
   (rule "sortsDisjointModuloNull" (formula "20") (term "0,0"))
   (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "24"))
   (rule "concrete_and_4" (formula "20") (term "0,0"))
   (rule "ifthenelse_false" (formula "20") (term "0"))
   (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "21") (term "1,2,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "21") (term "0,0,0,1,0,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "21") (term "1,0,0,1,1,0,0") (ifseqformula "20"))
   (rule "hideAuxiliaryEq" (formula "20"))
   (rule "replace_known_right" (formula "20") (term "0,0,1,0,0") (ifseqformula "22"))
   (rule "concrete_not_2" (formula "20") (term "0,1,0,0"))
   (rule "concrete_and_1" (formula "20") (term "1,0,0"))
   (rule "replace_known_right" (formula "20") (term "0,0,0,0") (ifseqformula "22"))
   (rule "concrete_and_2" (formula "20") (term "0,0,0"))
   (rule "concrete_or_2" (formula "20") (term "0,0"))
   (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "7"))
   (rule "concrete_not_1" (formula "20") (term "0,0"))
   (rule "ifthenelse_false" (formula "20") (term "0"))
   (rule "applyEqReverse" (formula "19") (term "0,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "21") (term "1,0,1,0") (ifseqformula "20"))
   (rule "hideAuxiliaryEq" (formula "20"))
   (rule "nnf_imp2or" (formula "20") (term "0"))
   (rule "nnf_notAnd" (formula "20") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
   (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
   (rule "mul_literals" (formula "20") (term "1,0,0,0"))
   (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x"))
   (rule "assignment" (formula "23") (term "1"))
   (rule "sequentialToParallel2" (formula "23"))
   (rule "simplifyUpdate2" (formula "23"))
   (rule "simplifyUpdate3" (formula "23") (term "1,0"))
   (rule "applyOnElementary" (formula "23") (term "1,0"))
   (rule "applyOnPV" (formula "23") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_1"))
   (rule "eval_order_array_access6" (formula "23") (term "1") (inst "#v0=x_arr"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr"))
   (rule "eval_order_array_access4" (formula "23") (term "1") (inst "#v0=x_arr_arr"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_arr"))
   (rule "assignment_read_attribute_this" (formula "23"))
   (rule "sequentialToParallel2" (formula "23"))
   (rule "simplifyUpdate3" (formula "23") (term "1,0"))
   (rule "applyOnElementary" (formula "23") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
   (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "23") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0"))
   (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "0,1,0"))
   (rule "assignment_array2" (formula "23"))
   (branch "Normal Execution (x_arr_arr != null)"
      (rule "sequentialToParallel2" (formula "23"))
      (rule "simplifyUpdate2" (formula "23"))
      (rule "simplifyUpdate3" (formula "23") (term "1,0"))
      (rule "applyOnElementary" (formula "23") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "23") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "23") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "23") (term "1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "23") (term "2,0,1,0"))
      (rule "applyOnPV" (formula "23") (term "0,2,0,1,0"))
      (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
      (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
      (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
      (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
      (rule "concrete_and_3" (formula "1") (term "0,0,0"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "22"))
      (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
      (rule "concrete_and_1" (formula "1") (term "1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "8"))
      (rule "concrete_not_1" (formula "1") (term "1,0,0"))
      (rule "concrete_or_4" (formula "1") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
      (rule "concrete_and_4" (formula "1") (term "0,0"))
      (rule "ifthenelse_false" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "assignment_read_length" (formula "23"))
      (branch "Normal Execution (x_arr != null)"
         (rule "sequentialToParallel2" (formula "23"))
         (rule "simplifyUpdate2" (formula "23"))
         (rule "simplifyUpdate3" (formula "23") (term "1,0"))
         (rule "applyOnElementary" (formula "23") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
         (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
         (rule "less_than_comparison_simple" (formula "23") (term "1"))
         (rule "sequentialToParallel2" (formula "23"))
         (rule "simplifyUpdate2" (formula "23"))
         (rule "simplifyUpdate3" (formula "23") (term "1,0"))
         (rule "applyOnElementary" (formula "23") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "23") (term "2,0,1,0"))
         (rule "applyOnRigidFormula" (formula "23") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "23") (term "0,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "23") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "23") (term "0,0,0,1,0"))
         (rule "applyOnPV" (formula "23") (term "1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "23") (term "1"))
         (rule "emptyModality" (formula "23") (term "1"))
         (rule "impRight" (formula "23"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "simplifyUpdate2" (formula "24"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "21"))
         (rule "applyOnPV" (formula "21") (term "0"))
         (rule "simplifyUpdate1" (formula "21") (term "1"))
         (rule "ifthenelse_concrete3" (formula "21"))
         (rule "boolean_not_equal_2" (formula "21") (term "1"))
         (rule "concrete_or_4" (formula "21"))
         (rule "inEqSimp_geqRight" (formula "21"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
         (rule "inEqSimp_homoInEq1" (formula "20"))
         (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
         (rule "add_literals" (formula "20") (term "1,0"))
         (rule "times_zero_1" (formula "20") (term "0"))
         (rule "leq_literals" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "methodCallEmpty" (formula "23") (term "1"))
         (rule "tryEmpty" (formula "23") (term "1"))
         (rule "emptyModality" (formula "23") (term "1"))
         (rule "applyOnRigidFormula" (formula "23"))
         (rule "simplifyUpdate2" (formula "23") (term "1"))
         (rule "simplifyUpdate2" (formula "23") (term "0"))
         (rule "applyOnRigidFormula" (formula "23") (term "1"))
         (rule "simplifyUpdate1" (formula "23") (term "1,1"))
         (rule "applyOnPV" (formula "23") (term "0,1"))
         (rule "eqClose" (formula "23") (term "1"))
         (rule "concrete_and_3" (formula "23"))
         (rule "applyOnRigidFormula" (formula "23"))
         (rule "simplifyUpdate1" (formula "23") (term "1"))
         (rule "applyOnPV" (formula "23") (term "0"))
         (rule "Class_invariant_axiom_for_Drawing" (formula "23") (inst "j=j") (inst "i=i_1") (inst "i_0=i_0") (ifseqformula "3"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "1,0,0"))
         (rule "inInt" (formula "23") (term "1,0,0,1,0"))
         (rule "concrete_and_3" (formula "23") (term "0,0,1,0"))
         (rule "inInt" (formula "23") (term "1,0,0,0,1"))
         (rule "concrete_and_3" (formula "23") (term "0,0,0,1"))
         (rule "inInt" (formula "23") (term "1,0,0,0,1"))
         (rule "concrete_and_3" (formula "23") (term "0,0,0,1"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "0,1,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "0,1,1,0,1,0"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "1,0,0,1,0,1,0"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "0,1,1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "1,1,0,0,1,0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "1,0,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "0,1,1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "1,1,0,0,1,0,0,1"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "1,1,0,1,1,1,1,0,0,1"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "1,1,0,0,1,1,1,0,0,1"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "1,1,0,1,0,1,1,0,0,1"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "1,1,0,0,0,1,1,0,0,1"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "0,0,1,0,1,1,0,0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "1,1,0,1,1,1,1,0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "1,1,0,0,1,1,1,0,0,1"))
         (rule "replaceKnownSelect_taclet2_1" (formula "23") (term "1,0,0,1,1,1,1,0,0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "1,1,0,1,0,1,1,0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "1,1,0,0,0,1,1,0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "0,0,1,0,1,1,0,0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_2" (formula "23") (term "1,0,0,1,1,1,1,0,0,0,1"))
         (rule "translateJavaAddInt" (formula "23") (term "0,2,0,1,0,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "23") (term "0,2,1,0,0,1,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "23") (term "0,2,0,0,0,1,1,0,0,1"))
         (rule "translateJavaAddInt" (formula "23") (term "0,2,1,0,1,1,1,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "23") (term "1,0,1,1,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "23") (term "1,1,1,1,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "23") (term "0,2,1,0,0,1,1,1,0,0,1"))
         (rule "mul_literals" (formula "23") (term "1,0,2,1,0,0,1,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "23") (term "0,2,0,0,0,1,1,0,0,1"))
         (rule "mul_literals" (formula "23") (term "1,0,2,0,0,0,1,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "23") (term "1,0,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "1,1,0,1,1,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "1,1,1,1,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "23") (term "0,2,0,1,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "23") (term "0,2,1,0,1,1,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "23") (term "0,2,1,0,0,1,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "23") (term "0,2,0,0,0,1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "23") (term "1,0,1,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "23") (term "1,1,1,1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1,0,0,0,1"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,1,1,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,1,0,0,0,1"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,1,1,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,1,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "0,1,0,1,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,1,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,1,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "0,1,1,1,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,1,1,0,0,0,1"))
         (rule "nonNull" (formula "23") (term "0,0") (inst "i=i_1"))
         (rule "greater_literals" (formula "23") (term "0,1,0,0"))
         (rule "concrete_impl_1" (formula "23") (term "1,0,0"))
         (rule "sub_literals" (formula "23") (term "2,1,0,1,0,0"))
         (rule "nonNullZero" (formula "23") (term "1,0,1,0,0"))
         (rule "replace_known_right" (formula "23") (term "0,0,0,0") (ifseqformula "21"))
         (rule "concrete_not_2" (formula "23") (term "0,0,0"))
         (rule "concrete_and_1" (formula "23") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
         (rule "pullOutSelect" (formula "23") (term "0,1,1,1,1,1,0,0,0,1") (inst "selectSK=arr_2"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
         (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "8"))
         (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
         (rule "concrete_and_4" (formula "1") (term "1,0,0"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
         (rule "concrete_and_4" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "24") (term "0,1,1,1,1,1,0,0,0,1") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "nnf_imp2or" (formula "23") (term "1,0,0,1"))
         (rule "nnf_imp2or" (formula "23") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "23") (term "0,0,0"))
         (rule "nnf_imp2or" (formula "23") (term "0,0,1"))
         (rule "nnf_notAnd" (formula "23") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0,1"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "23") (term "1,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0,0,1"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,1"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,1"))
         (rule "nnf_notAnd" (formula "23") (term "1,1,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "23") (term "0,1,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1,0,0,0,1"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,1,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "0,1,0,1,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,1,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,1,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,1,1,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1,1,0,0,0,1"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,1,1,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,1,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,1,1,0,0,0,1"))
         (rule "mul_literals" (formula "23") (term "0,1,1,1,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,1,1,0,0,0,1"))
         (rule "allLeft" (formula "10") (inst "t=depth"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
         (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "20"))
         (rule "eqSymm" (formula "10") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "8"))
         (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
         (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
         (rule "leq_literals" (formula "10") (term "0,1,0"))
         (rule "concrete_and_2" (formula "10") (term "1,0"))
         (rule "concrete_or_4" (formula "10") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "5"))
         (rule "qeq_literals" (formula "10") (term "0,0"))
         (rule "concrete_and_2" (formula "10") (term "0"))
         (rule "concrete_or_2" (formula "10"))
         (rule "applyEq" (formula "17") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "10"))
         (rule "applyEq" (formula "14") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "10"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "10"))
         (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "9"))
         (rule "applyEq" (formula "14") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "9"))
         (rule "applyEq" (formula "23") (term "1,1,0,1,1,0,0,0,1") (ifseqformula "9"))
         (rule "applyEq" (formula "23") (term "1,1,0,0,1,0") (ifseqformula "9"))
         (rule "applyEq" (formula "23") (term "1,1,0,0,0,0") (ifseqformula "9"))
         (rule "applyEq" (formula "15") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "9"))
         (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "9"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "9"))
         (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "9"))
         (rule "applyEq" (formula "23") (term "1,1,0,1,0") (ifseqformula "9"))
         (rule "cut_direct" (formula "12") (term "0"))
         (branch "CUT: self.canvas[0] = null TRUE"
            (rule "concrete_or_1" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "applyEq" (formula "23") (term "0,1,1,1,1,1,0,0,0,1") (ifseqformula "12"))
            (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
            (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "12"))
            (rule "applyEq" (formula "14") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "12"))
            (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "12"))
            (rule "applyEq" (formula "13") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "12"))
            (rule "andRight" (formula "23"))
            (branch "Case 1"
               (rule "andRight" (formula "23"))
               (branch "Case 1"
                  (rule "allRight" (formula "23") (inst "sk=i_1_3"))
                  (rule "orRight" (formula "23"))
                  (rule "orRight" (formula "23"))
                  (rule "notRight" (formula "25"))
                  (rule "inEqSimp_leqRight" (formula "24"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_130"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
                  (rule "elementOfAllFields" (formula "3") (term "0,0,0,0"))
                  (rule "equalUnique" (formula "3") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "3") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "3") (term "0,0,0"))
                  (rule "eqSymm" (formula "3") (term "0,0,0"))
                  (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "25"))
                  (rule "concrete_not_2" (formula "3") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "3") (term "1,0,0"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "10"))
                  (rule "concrete_not_1" (formula "3") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "3") (term "0,0"))
                  (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "25"))
                  (rule "concrete_and_4" (formula "3") (term "0,0"))
                  (rule "ifthenelse_false" (formula "3") (term "0"))
                  (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "4") (ifseqformula "24"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "2"))
                  (rule "leq_literals" (formula "22") (term "0"))
                  (rule "concrete_or_1" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                  (rule "inShort" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "2"))
                  (rule "leq_literals" (formula "22") (term "0"))
                  (rule "concrete_or_1" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "allLeft" (formula "12") (inst "t=Z(0(#))"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                  (rule "concrete_or_2" (formula "12") (term "0"))
                  (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "17"))
                  (rule "concrete_not_1" (formula "12") (term "1"))
                  (rule "concrete_or_4" (formula "12"))
                  (rule "inEqSimp_commuteGeq" (formula "12"))
                  (rule "allLeft" (formula "13") (inst "t=i_1_3"))
                  (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "4"))
                  (rule "concrete_not_1" (formula "13") (term "1"))
                  (rule "concrete_or_4" (formula "13"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "12") (term "0"))
                  (rule "concrete_and_2" (formula "12"))
                  (rule "closeFalse" (formula "12"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "23") (inst "sk=i_0_1"))
                  (rule "orRight" (formula "23"))
                  (rule "orRight" (formula "23"))
                  (rule "inEqSimp_geqRight" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_leqRight" (formula "24"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "pullOutSelect" (formula "25") (term "0,0") (inst "selectSK=arr_129"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "9"))
                  (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
                  (rule "concrete_and_4" (formula "1") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "1") (term "0,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "24"))
                  (rule "concrete_and_4" (formula "1") (term "0,0"))
                  (rule "ifthenelse_false" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                  (rule "leq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_1" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                  (rule "leq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_1" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                  (rule "inShort" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "allLeft" (formula "11") (inst "t=Z(0(#))"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                  (rule "concrete_or_2" (formula "11") (term "0"))
                  (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "16"))
                  (rule "concrete_not_1" (formula "11") (term "1"))
                  (rule "concrete_or_4" (formula "11"))
                  (rule "inEqSimp_commuteGeq" (formula "11"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "11") (term "0"))
                  (rule "concrete_and_2" (formula "11"))
                  (rule "closeFalse" (formula "11"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "23") (inst "sk=j_1"))
               (rule "allRight" (formula "23") (inst "sk=i_1_2"))
               (rule "orRight" (formula "23"))
               (rule "orRight" (formula "24"))
               (rule "orRight" (formula "23"))
               (rule "orRight" (formula "26"))
               (rule "notRight" (formula "25"))
               (rule "orRight" (formula "25"))
               (rule "orRight" (formula "26"))
               (rule "inEqSimp_leqRight" (formula "24"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "25"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "26"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_geqRight" (formula "27"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "29") (term "1,0,1") (inst "selectSK=arr_121"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "12"))
               (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
               (rule "concrete_and_4" (formula "1") (term "1,0,0"))
               (rule "concrete_or_4" (formula "1") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "27"))
               (rule "concrete_and_4" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "30") (term "1,0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "29") (term "0,0") (inst "selectSK=arr_122"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "29") (term "0,1") (inst "selectSK=arr_123"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "30") (term "1,0,0") (inst "selectSK=arr_124"))
               (rule "applyEq" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "2") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
               (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
               (rule "concrete_and_1" (formula "1") (term "1,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
               (rule "concrete_not_1" (formula "1") (term "1,0,0"))
               (rule "concrete_or_4" (formula "1") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "29"))
               (rule "concrete_and_4" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "31") (term "1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "31") (term "0,1") (inst "selectSK=arr_125"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "3") (term "1,1,0") (inst "selectSK=arr_126"))
               (rule "applyEq" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "3"))
               (rule "simplifySelectOfAnon" (formula "3"))
               (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "3") (term "0,0,0,0"))
               (rule "equalUnique" (formula "3") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "3") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "3") (term "0,0,0"))
               (rule "eqSymm" (formula "4") (term "0,0,0"))
               (rule "eqSymm" (formula "3") (term "0,0,0"))
               (rule "replace_known_left" (formula "3") (term "0,1,1,0,0") (ifseqformula "15"))
               (rule "concrete_not_1" (formula "3") (term "1,1,0,0"))
               (rule "concrete_and_4" (formula "3") (term "1,0,0"))
               (rule "concrete_or_4" (formula "3") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
               (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "30"))
               (rule "concrete_and_4" (formula "3") (term "0,0"))
               (rule "ifthenelse_false" (formula "3") (term "0"))
               (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "eqSymm" (formula "3") (term "0,0,0"))
               (rule "pullOutSelect" (formula "31") (term "0,0") (inst "selectSK=arr_127"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_128"))
               (rule "simplifySelectOfAnon" (formula "9"))
               (rule "elementOfFreshLocs" (formula "9") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "9") (term "0,0,0,0"))
               (rule "equalUnique" (formula "9") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "9") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "9") (term "0,0,0"))
               (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
               (rule "ifEqualsTRUE" (formula "9"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
               (rule "mul_literals" (formula "8") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "8"))
               (rule "leq_literals" (formula "29") (term "0"))
               (rule "concrete_or_1" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "hideAuxiliaryEqConcrete" (formula "11"))
               (rule "arrayLengthNotNegative" (formula "28") (term "0"))
               (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
               (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "8"))
               (rule "leq_literals" (formula "28") (term "0"))
               (rule "concrete_or_1" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "arrayLengthIsAShort" (formula "28") (term "0"))
               (rule "inShort" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "commute_and" (formula "32"))
               (rule "cnf_rightDist" (formula "3") (term "0,0"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "cnf_rightDist" (formula "4") (term "0,0"))
               (rule "cnf_rightDist" (formula "1") (term "0,0"))
               (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
               (rule "leq_literals" (formula "18") (term "0,0"))
               (rule "concrete_or_2" (formula "18") (term "0"))
               (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "23"))
               (rule "concrete_not_1" (formula "18") (term "1"))
               (rule "concrete_or_4" (formula "18"))
               (rule "inEqSimp_commuteGeq" (formula "18"))
               (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "8"))
               (rule "qeq_literals" (formula "18") (term "0"))
               (rule "concrete_and_2" (formula "18"))
               (rule "closeFalse" (formula "18"))
            )
         )
         (branch "CUT: self.canvas[0] = null FALSE"
            (rule "concrete_or_2" (formula "12"))
            (rule "andRight" (formula "24"))
            (branch "Case 1"
               (rule "andRight" (formula "24"))
               (branch "Case 1"
                  (rule "allRight" (formula "24") (inst "sk=i_1_1"))
                  (rule "orRight" (formula "24"))
                  (rule "notRight" (formula "25"))
                  (rule "orRight" (formula "25"))
                  (rule "inEqSimp_geqRight" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_leqRight" (formula "26"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_120"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
                  (rule "elementOfAllFields" (formula "3") (term "0,0,0,0"))
                  (rule "equalUnique" (formula "3") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "3") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "3") (term "0,0,0"))
                  (rule "eqSymm" (formula "3") (term "0,0,0"))
                  (rule "replace_known_left" (formula "3") (term "0,1,1,0,0") (ifseqformula "10"))
                  (rule "concrete_not_1" (formula "3") (term "1,1,0,0"))
                  (rule "concrete_and_4" (formula "3") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "3") (term "0,0"))
                  (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "26"))
                  (rule "concrete_and_4" (formula "3") (term "0,0"))
                  (rule "ifthenelse_false" (formula "3") (term "0"))
                  (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "4") (ifseqformula "25"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                  (rule "leq_literals" (formula "22") (term "0"))
                  (rule "concrete_or_1" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                  (rule "leq_literals" (formula "22") (term "0"))
                  (rule "concrete_or_1" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                  (rule "inShort" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "allLeft" (formula "12") (inst "t=i_1_1"))
                  (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "4"))
                  (rule "concrete_not_1" (formula "12") (term "1"))
                  (rule "concrete_or_4" (formula "12"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "12") (term "0,0"))
                  (rule "concrete_and_2" (formula "12") (term "0"))
                  (rule "concrete_or_2" (formula "12"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "12"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "24") (inst "sk=i_0_0"))
                  (rule "orRight" (formula "24"))
                  (rule "orRight" (formula "24"))
                  (rule "inEqSimp_geqRight" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_leqRight" (formula "25"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "pullOutSelect" (formula "26") (term "0,0") (inst "selectSK=arr_119"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                  (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "25"))
                  (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "1,0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "9"))
                  (rule "concrete_not_1" (formula "1") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "1") (term "0,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "25"))
                  (rule "concrete_and_4" (formula "1") (term "0,0"))
                  (rule "ifthenelse_false" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                  (rule "leq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_1" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                  (rule "leq_literals" (formula "21") (term "0"))
                  (rule "concrete_or_1" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                  (rule "inShort" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "allLeft" (formula "13") (inst "t=i_0_0"))
                  (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "27"))
                  (rule "concrete_or_4" (formula "13"))
                  (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1"))
                  (rule "leq_literals" (formula "13") (term "0,1"))
                  (rule "concrete_and_2" (formula "13") (term "1"))
                  (rule "concrete_or_4" (formula "13"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_and_2" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "24") (inst "sk=j_0"))
               (rule "allRight" (formula "24") (inst "sk=i_1_0"))
               (rule "orRight" (formula "24"))
               (rule "orRight" (formula "24"))
               (rule "orRight" (formula "26"))
               (rule "orRight" (formula "25"))
               (rule "orRight" (formula "28"))
               (rule "notRight" (formula "27"))
               (rule "orRight" (formula "27"))
               (rule "inEqSimp_leqRight" (formula "25"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "26"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "28"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "28"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "pullOutSelect" (formula "30") (term "0,0") (inst "selectSK=arr_3"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "30") (term "0,1") (inst "selectSK=arr_4"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "32") (term "0,1") (inst "selectSK=arr_5"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "32") (term "1,0,0") (inst "selectSK=arr_6"))
               (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "3") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "15"))
               (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
               (rule "concrete_and_4" (formula "1") (term "1,0,0"))
               (rule "concrete_or_4" (formula "1") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "31"))
               (rule "concrete_and_4" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "3") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "9") (term "1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "33") (term "1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "2") (term "0,0,0"))
               (rule "pullOutSelect" (formula "3") (term "1,2,0") (inst "selectSK=arr_7"))
               (rule "applyEq" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
               (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
               (rule "simplifySelectOfAnon" (formula "3"))
               (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "3") (term "0,0,0,0"))
               (rule "equalUnique" (formula "3") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "3") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "3") (term "0,0,0"))
               (rule "eqSymm" (formula "4") (term "0,0,0"))
               (rule "eqSymm" (formula "3") (term "0,0,0"))
               (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "31"))
               (rule "concrete_not_2" (formula "3") (term "0,1,0,0"))
               (rule "concrete_and_1" (formula "3") (term "1,0,0"))
               (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "15"))
               (rule "concrete_not_1" (formula "3") (term "1,0,0"))
               (rule "concrete_or_4" (formula "3") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
               (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "31"))
               (rule "concrete_and_4" (formula "3") (term "0,0"))
               (rule "ifthenelse_false" (formula "3") (term "0"))
               (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "eqSymm" (formula "3") (term "0,0,0"))
               (rule "pullOutSelect" (formula "1") (term "1,2,0") (inst "selectSK=arr_8"))
               (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "2") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "15"))
               (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
               (rule "concrete_and_4" (formula "1") (term "1,0,0"))
               (rule "concrete_or_4" (formula "1") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "31"))
               (rule "concrete_and_4" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_9"))
               (rule "simplifySelectOfAnon" (formula "8"))
               (rule "elementOfFreshLocs" (formula "8") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "8") (term "0,0,0,0"))
               (rule "equalUnique" (formula "8") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "8") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "8") (term "0,0,0"))
               (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "9"))
               (rule "ifEqualsTRUE" (formula "8"))
               (rule "pullOutSelect" (formula "33") (term "0,0") (inst "selectSK=arr_10"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
               (rule "mul_literals" (formula "8") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "8"))
               (rule "leq_literals" (formula "29") (term "0"))
               (rule "concrete_or_1" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "hideAuxiliaryEqConcrete" (formula "11"))
               (rule "arrayLengthIsAShort" (formula "28") (term "0"))
               (rule "inShort" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "arrayLengthNotNegative" (formula "28") (term "0"))
               (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
               (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "8"))
               (rule "leq_literals" (formula "28") (term "0"))
               (rule "concrete_or_1" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "cnf_rightDist" (formula "3") (term "0,0"))
               (rule "cnf_rightDist" (formula "4") (term "0,0"))
               (rule "cnf_rightDist" (formula "2") (term "0,0"))
               (rule "commute_or" (formula "3") (term "0,0,0"))
               (rule "commute_or" (formula "3") (term "1,0,0"))
               (rule "commute_or" (formula "4") (term "0,0,0"))
               (rule "commute_or" (formula "4") (term "1,0,0"))
               (rule "cnf_rightDist" (formula "10") (term "0,0"))
               (rule "commute_or" (formula "2") (term "0,0,0"))
               (rule "commute_or" (formula "2") (term "1,0,0"))
               (rule "commute_or" (formula "10") (term "1,0,0"))
               (rule "commute_or" (formula "10") (term "0,0,0"))
               (rule "cnf_rightDist" (formula "1") (term "0,0"))
               (rule "commute_and_2" (formula "10") (term "0"))
               (rule "commute_or" (formula "1") (term "1,0,0"))
               (rule "commute_or" (formula "1") (term "0,0,0"))
               (rule "cnf_rightDist" (formula "10") (term "0,0,1"))
               (rule "commute_and" (formula "10") (term "0,0"))
               (rule "commute_or" (formula "10") (term "1,0,0,1"))
               (rule "commute_or" (formula "10") (term "0,0,0,1"))
               (rule "orLeft" (formula "10"))
               (branch " (self.canvas[i_1_0]@heap)[j_0]@anon_heap_LOOP<<anonHeapFunction>> = TRUE & ( !self.canvas[i_1_0] = null | self.canvas[i_1_0] = self.canvas[depth]) & ( self.canvas[i_1_0] = self.canvas[depth] | !self.canvas[i_1_0].<created> = TRUE)"
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "11"))
                  (rule "concrete_and_1" (formula "1") (term "0,0"))
                  (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "11"))
                  (rule "concrete_and_1" (formula "3") (term "0,0"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "12"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "11"))
                  (rule "ifthenelse_true" (formula "2") (term "0"))
                  (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "commute_and" (formula "33"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1,0,1,0") (ifseqformula "11"))
                  (rule "ifthenelse_split" (formula "2") (term "0"))
                  (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                     (rule "andLeft" (formula "2"))
                     (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "commute_and" (formula "36"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "allLeft" (formula "32") (inst "t=depth"))
                        (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "19"))
                        (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                        (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "32") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "32") (term "1,0"))
                        (rule "concrete_or_4" (formula "32") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "17"))
                        (rule "qeq_literals" (formula "32") (term "0,0"))
                        (rule "concrete_and_2" (formula "32") (term "0"))
                        (rule "concrete_or_2" (formula "32"))
                        (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_114"))
                        (rule "simplifySelectOfAnon" (formula "32"))
                        (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                        (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                        (rule "eqClose" (formula "32") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                        (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                        (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "32") (term "0,0"))
                        (rule "ifthenelse_true" (formula "32") (term "0"))
                        (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                        (rule "hideAuxiliaryEq" (formula "32"))
                        (rule "allLeft" (formula "33") (inst "t=Z(0(#))"))
                        (rule "leq_literals" (formula "33") (term "0,0"))
                        (rule "concrete_or_2" (formula "33") (term "0"))
                        (rule "inEqSimp_commuteGeq" (formula "33") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "33") (term "0,0"))
                        (rule "concrete_and_2" (formula "33") (term "0"))
                        (rule "concrete_or_2" (formula "33"))
                        (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_115"))
                        (rule "simplifySelectOfAnon" (formula "33"))
                        (rule "elementOfFreshLocs" (formula "33") (term "1,0,0"))
                        (rule "elementOfAllFields" (formula "33") (term "0,0,0,0"))
                        (rule "eqClose" (formula "33") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "33") (term "0,0,0"))
                        (rule "equalUnique" (formula "33") (term "0,0,0,0"))
                        (rule "concrete_not_2" (formula "33") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "33") (term "0,0"))
                        (rule "ifthenelse_true" (formula "33") (term "0"))
                        (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                        (rule "hideAuxiliaryEq" (formula "33"))
                        (rule "allLeft" (formula "34") (inst "t=i_1_0"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "34") (term "0,0,0"))
                        (rule "concrete_and_2" (formula "34") (term "0,0"))
                        (rule "concrete_or_2" (formula "34") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0"))
                        (rule "leq_literals" (formula "34") (term "0,0"))
                        (rule "concrete_and_2" (formula "34") (term "0"))
                        (rule "concrete_or_2" (formula "34"))
                        (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_116"))
                        (rule "simplifySelectOfAnon" (formula "34"))
                        (rule "elementOfFreshLocs" (formula "34") (term "1,0,0"))
                        (rule "elementOfAllFields" (formula "34") (term "0,0,0,0"))
                        (rule "eqClose" (formula "34") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "34") (term "0,0,0"))
                        (rule "equalUnique" (formula "34") (term "0,0,0,0"))
                        (rule "concrete_not_2" (formula "34") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "34") (term "0,0"))
                        (rule "ifthenelse_true" (formula "34") (term "0"))
                        (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                        (rule "hideAuxiliaryEq" (formula "34"))
                        (rule "allLeft" (formula "35") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                        (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "35") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                        (rule "inEqSimp_invertInEq1" (formula "35") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                        (rule "times_zero_2" (formula "35") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "35") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "35") (term "1,0"))
                        (rule "concrete_or_4" (formula "35") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "35") (term "0,0"))
                        (rule "concrete_and_2" (formula "35") (term "0"))
                        (rule "concrete_or_2" (formula "35"))
                        (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_117"))
                        (rule "simplifySelectOfAnon" (formula "35"))
                        (rule "elementOfFreshLocs" (formula "35") (term "1,0,0"))
                        (rule "elementOfAllFields" (formula "35") (term "0,0,0,0"))
                        (rule "eqClose" (formula "35") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "35") (term "0,0,0"))
                        (rule "equalUnique" (formula "35") (term "0,0,0,0"))
                        (rule "concrete_not_2" (formula "35") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "35") (term "0,0"))
                        (rule "ifthenelse_true" (formula "35") (term "0"))
                        (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                        (rule "hideAuxiliaryEq" (formula "35"))
                        (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_1_0)"))
                        (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "36") (term "0,0,0"))
                        (rule "concrete_and_2" (formula "36") (term "0,0"))
                        (rule "concrete_or_2" (formula "36") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                        (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0"))
                        (rule "leq_literals" (formula "36") (term "0,0"))
                        (rule "concrete_and_2" (formula "36") (term "0"))
                        (rule "concrete_or_2" (formula "36"))
                        (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_118"))
                        (rule "simplifySelectOfAnon" (formula "36"))
                        (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                        (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                        (rule "eqClose" (formula "36") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                        (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                        (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "36") (term "0,0"))
                        (rule "ifthenelse_true" (formula "36") (term "0"))
                        (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                        (rule "hideAuxiliaryEq" (formula "36"))
                        (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                        (rule "leq_literals" (formula "22") (term "0,0"))
                        (rule "concrete_or_2" (formula "22") (term "0"))
                        (rule "inEqSimp_commuteGeq" (formula "22") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "22") (term "0,0"))
                        (rule "concrete_and_2" (formula "22") (term "0"))
                        (rule "concrete_or_2" (formula "22"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "22"))
                        (rule "inEqSimp_homoInEq1" (formula "6"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "27") (term "1,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "29") (term "1,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0") (ifseqformula "22"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "8"))
                        (rule "leq_literals" (formula "24") (term "0"))
                        (rule "concrete_or_1" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                        (rule "mul_literals" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "mul_literals" (formula "7") (term "1"))
                        (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_1_0)"))
                        (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "23") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "23") (term "1,0"))
                        (rule "concrete_or_4" (formula "23") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "23") (term "0,0"))
                        (rule "concrete_and_2" (formula "23") (term "0"))
                        (rule "concrete_or_2" (formula "23"))
                        (rule "allLeft" (formula "20") (inst "t=depth"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "17"))
                        (rule "qeq_literals" (formula "20") (term "0,0,0"))
                        (rule "concrete_and_2" (formula "20") (term "0,0"))
                        (rule "concrete_or_2" (formula "20") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "19"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0"))
                        (rule "leq_literals" (formula "20") (term "0,0"))
                        (rule "concrete_and_2" (formula "20") (term "0"))
                        (rule "concrete_or_2" (formula "20"))
                        (rule "notLeft" (formula "20"))
                        (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "39"))
                        (rule "concrete_or_2" (formula "32"))
                        (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_1_0)"))
                        (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "20") (term "0,0,0"))
                        (rule "concrete_and_2" (formula "20") (term "0,0"))
                        (rule "concrete_or_2" (formula "20") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0"))
                        (rule "leq_literals" (formula "20") (term "0,0"))
                        (rule "concrete_and_2" (formula "20") (term "0"))
                        (rule "concrete_or_2" (formula "20"))
                        (rule "notLeft" (formula "20"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "39"))
                        (rule "concrete_not_2" (formula "1") (term "0"))
                        (rule "concrete_or_1" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "allLeft" (formula "23") (inst "t=i_1_0"))
                        (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "23") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "23") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "23") (term "1,0"))
                        (rule "concrete_or_4" (formula "23") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "23") (term "0,0"))
                        (rule "concrete_and_2" (formula "23") (term "0"))
                        (rule "concrete_or_2" (formula "23"))
                        (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                        (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "19") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "19") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "19") (term "1,0"))
                        (rule "concrete_or_4" (formula "19") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "19") (term "0,0"))
                        (rule "concrete_and_2" (formula "19") (term "0"))
                        (rule "concrete_or_2" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "39"))
                        (rule "concrete_not_2" (formula "10") (term "0"))
                        (rule "concrete_or_1" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                        (rule "inEqSimp_invertInEq1" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                        (rule "times_zero_2" (formula "23") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "23") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "23") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "23") (term "1,0"))
                        (rule "concrete_or_4" (formula "23") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "23") (term "0,0"))
                        (rule "concrete_and_2" (formula "23") (term "0"))
                        (rule "concrete_or_2" (formula "23"))
                        (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                        (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                        (rule "inEqSimp_invertInEq1" (formula "18") (term "0,0"))
                        (rule "times_zero_2" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "18") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "18") (term "1,0"))
                        (rule "concrete_or_4" (formula "18") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "8"))
                        (rule "qeq_literals" (formula "18") (term "0,0"))
                        (rule "concrete_and_2" (formula "18") (term "0"))
                        (rule "concrete_or_2" (formula "18"))
                        (rule "notLeft" (formula "18"))
                        (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "39"))
                        (rule "concrete_not_2" (formula "2") (term "0"))
                        (rule "concrete_or_1" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "cut_direct" (formula "9") (term "0,1"))
                        (branch "CUT: self.canvas[i_1_0].<created> = TRUE TRUE"
                           (rule "concrete_not_1" (formula "10") (term "1"))
                           (rule "concrete_or_4" (formula "10"))
                           (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "10"))
                           (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "10"))
                           (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "9"))
                           (rule "cut_direct" (formula "2") (term "0,1"))
                           (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                              (rule "concrete_not_1" (formula "3") (term "1"))
                              (rule "concrete_or_4" (formula "3"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "3"))
                              (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "9"))
                              (rule "concrete_and_3" (formula "44"))
                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                              (rule "cut_direct" (formula "1") (term "0,1"))
                              (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                 (rule "concrete_not_1" (formula "2") (term "1"))
                                 (rule "concrete_or_4" (formula "2"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                 (rule "close" (formula "40") (ifseqformula "8"))
                              )
                              (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "36") (ifseqformula "37"))
                                 (rule "close" (formula "36") (ifseqformula "10"))
                              )
                           )
                           (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "38"))
                              (rule "close" (formula "37") (ifseqformula "10"))
                           )
                        )
                        (branch "CUT: self.canvas[i_1_0].<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "40"))
                           (rule "close" (formula "38") (ifseqformula "10"))
                        )
                     )
                     (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                        (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "andRight" (formula "31"))
                        (branch "Case 1"
                           (rule "orRight" (formula "31"))
                           (rule "notRight" (formula "31"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "32"))
                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "32"))
                           (rule "concrete_or_2" (formula "30"))
                           (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "1"))
                           (rule "allLeft" (formula "31") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "31") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "31") (term "1,0"))
                           (rule "concrete_or_4" (formula "31") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                           (rule "concrete_and_2" (formula "31") (term "0"))
                           (rule "concrete_or_2" (formula "31"))
                           (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_112"))
                           (rule "simplifySelectOfAnon" (formula "31"))
                           (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                           (rule "eqClose" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                           (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "31") (term "0,0"))
                           (rule "ifthenelse_true" (formula "31") (term "0"))
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "allLeft" (formula "32") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_or_2" (formula "32") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_and_2" (formula "32") (term "0"))
                           (rule "concrete_or_2" (formula "32"))
                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_113"))
                           (rule "simplifySelectOfAnon" (formula "32"))
                           (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                           (rule "eqClose" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                           (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "32") (term "0,0"))
                           (rule "ifthenelse_true" (formula "32") (term "0"))
                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                           (rule "hideAuxiliaryEq" (formula "32"))
                           (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "1"))
                           (rule "concrete_not_1" (formula "19") (term "1"))
                           (rule "concrete_or_4" (formula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0"))
                           (rule "concrete_or_2" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "4"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "add_zero_right" (formula "19") (term "0"))
                           (rule "leq_literals" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "31"))
                           (rule "notRight" (formula "32"))
                           (rule "allLeft" (formula "31") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "31") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "31") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "31") (term "1,0"))
                           (rule "concrete_or_4" (formula "31") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                           (rule "concrete_and_2" (formula "31") (term "0"))
                           (rule "concrete_or_2" (formula "31"))
                           (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_104"))
                           (rule "simplifySelectOfAnon" (formula "31"))
                           (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                           (rule "eqClose" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                           (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "31") (term "0,0"))
                           (rule "ifthenelse_true" (formula "31") (term "0"))
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "allLeft" (formula "32") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_or_2" (formula "32") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_and_2" (formula "32") (term "0"))
                           (rule "concrete_or_2" (formula "32"))
                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_105"))
                           (rule "simplifySelectOfAnon" (formula "32"))
                           (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                           (rule "eqClose" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                           (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "32") (term "0,0"))
                           (rule "ifthenelse_true" (formula "32") (term "0"))
                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                           (rule "hideAuxiliaryEq" (formula "32"))
                           (rule "allLeft" (formula "33") (inst "t=i_1_0"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "33") (term "0,0"))
                           (rule "concrete_or_2" (formula "33") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0"))
                           (rule "leq_literals" (formula "33") (term "0,0"))
                           (rule "concrete_and_2" (formula "33") (term "0"))
                           (rule "concrete_or_2" (formula "33"))
                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_106"))
                           (rule "simplifySelectOfAnon" (formula "33"))
                           (rule "elementOfFreshLocs" (formula "33") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "33") (term "0,0,0,0"))
                           (rule "eqClose" (formula "33") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "33") (term "0,0,0"))
                           (rule "equalUnique" (formula "33") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "33") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "33") (term "0,0"))
                           (rule "ifthenelse_true" (formula "33") (term "0"))
                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                           (rule "hideAuxiliaryEq" (formula "33"))
                           (rule "allLeft" (formula "34") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "34") (term "0,0"))
                           (rule "times_zero_2" (formula "34") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "34") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "34") (term "1,0"))
                           (rule "concrete_or_4" (formula "34") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "34") (term "0,0"))
                           (rule "concrete_and_2" (formula "34") (term "0"))
                           (rule "concrete_or_2" (formula "34"))
                           (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_107"))
                           (rule "simplifySelectOfAnon" (formula "34"))
                           (rule "elementOfFreshLocs" (formula "34") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "34") (term "0,0,0,0"))
                           (rule "eqClose" (formula "34") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "34") (term "0,0,0"))
                           (rule "equalUnique" (formula "34") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "34") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "34") (term "0,0"))
                           (rule "ifthenelse_true" (formula "34") (term "0"))
                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                           (rule "hideAuxiliaryEq" (formula "34"))
                           (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "35") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "35") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "35") (term "1,0"))
                           (rule "concrete_or_4" (formula "35") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "35") (term "0,0"))
                           (rule "concrete_and_2" (formula "35") (term "0"))
                           (rule "concrete_or_2" (formula "35"))
                           (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_108"))
                           (rule "simplifySelectOfAnon" (formula "35"))
                           (rule "elementOfFreshLocs" (formula "35") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "35") (term "0,0,0,0"))
                           (rule "eqClose" (formula "35") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "35") (term "0,0,0"))
                           (rule "equalUnique" (formula "35") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "35") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "35") (term "0,0"))
                           (rule "ifthenelse_true" (formula "35") (term "0"))
                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "21") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "21") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "21") (term "1,0"))
                           (rule "concrete_or_4" (formula "21") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "21") (term "0,0"))
                           (rule "concrete_and_2" (formula "21") (term "0"))
                           (rule "concrete_or_2" (formula "21"))
                           (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "19") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0,0"))
                           (rule "concrete_or_2" (formula "19") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "leq_literals" (formula "19") (term "0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0"))
                           (rule "concrete_or_2" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "38"))
                           (rule "concrete_not_2" (formula "10") (term "0"))
                           (rule "concrete_or_1" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "18") (term "0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "18") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0,0"))
                           (rule "concrete_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0"))
                           (rule "concrete_or_2" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "37"))
                           (rule "concrete_not_2" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0"))
                           (rule "times_zero_2" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "20") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "20") (term "0,0"))
                           (rule "concrete_or_2" (formula "20") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0"))
                           (rule "leq_literals" (formula "20") (term "0,0"))
                           (rule "concrete_and_2" (formula "20") (term "0"))
                           (rule "concrete_or_2" (formula "20"))
                           (rule "allLeft" (formula "17") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "17") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "17") (term "1,0"))
                           (rule "concrete_or_4" (formula "17") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                           (rule "concrete_and_2" (formula "17") (term "0"))
                           (rule "concrete_or_2" (formula "17"))
                           (rule "notLeft" (formula "17"))
                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "37"))
                           (rule "concrete_or_2" (formula "30"))
                           (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "17") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "17") (term "1,0"))
                           (rule "concrete_or_4" (formula "17") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                           (rule "concrete_and_2" (formula "17") (term "0"))
                           (rule "concrete_or_2" (formula "17"))
                           (rule "notLeft" (formula "17"))
                           (rule "allLeft" (formula "21") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "21") (term "0,0"))
                           (rule "concrete_or_2" (formula "21") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "21") (term "0,0"))
                           (rule "concrete_and_2" (formula "21") (term "0"))
                           (rule "concrete_or_2" (formula "21"))
                           (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "21"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "applyEq" (formula "27") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "6"))
                           (rule "leq_literals" (formula "23") (term "0"))
                           (rule "concrete_or_1" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                           (rule "mul_literals" (formula "5") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "22") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "22") (term "0,0"))
                           (rule "concrete_or_2" (formula "22") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,0"))
                           (rule "concrete_and_2" (formula "22") (term "0"))
                           (rule "concrete_or_2" (formula "22"))
                           (rule "cut_direct" (formula "9") (term "0,1"))
                           (branch "CUT: self.canvas[i_1_0].<created> = TRUE TRUE"
                              (rule "concrete_not_1" (formula "10") (term "1"))
                              (rule "concrete_or_4" (formula "10"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "40") (term "0") (ifseqformula "9"))
                              (rule "cut_direct" (formula "2") (term "0,1"))
                              (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                 (rule "concrete_not_1" (formula "3") (term "1"))
                                 (rule "concrete_or_4" (formula "3"))
                                 (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "3"))
                                 (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "9"))
                                 (rule "concrete_and_3" (formula "45"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "2"))
                                 (rule "allLeft" (formula "35") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                 (rule "times_zero_2" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "35") (term "0,0"))
                                 (rule "concrete_or_2" (formula "35") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                 (rule "concrete_and_2" (formula "35") (term "0"))
                                 (rule "concrete_or_2" (formula "35"))
                                 (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_109"))
                                 (rule "simplifySelectOfAnon" (formula "35"))
                                 (rule "elementOfFreshLocs" (formula "35") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "35") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "35") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "35") (term "0,0,0"))
                                 (rule "equalUnique" (formula "35") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "35") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "35") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "35") (term "0"))
                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "35"))
                                 (rule "concrete_and_3" (formula "43"))
                                 (rule "allLeft" (formula "36") (inst "t=j_0"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "36") (term "0,0"))
                                 (rule "concrete_or_2" (formula "36") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0"))
                                 (rule "leq_literals" (formula "36") (term "0,0"))
                                 (rule "concrete_and_2" (formula "36") (term "0"))
                                 (rule "concrete_or_2" (formula "36"))
                                 (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_110"))
                                 (rule "simplifySelectOfAnon" (formula "36"))
                                 (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "36") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                 (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "36") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "36") (term "0"))
                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), j_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "36") (term "0,0"))
                                 (rule "concrete_or_2" (formula "36") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0"))
                                 (rule "leq_literals" (formula "36") (term "0,0"))
                                 (rule "concrete_and_2" (formula "36") (term "0"))
                                 (rule "concrete_or_2" (formula "36"))
                                 (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_111"))
                                 (rule "simplifySelectOfAnon" (formula "36"))
                                 (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "36") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                 (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "36") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "36") (term "0"))
                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                 (rule "close" (formula "45") (ifseqformula "37"))
                              )
                              (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "40"))
                                 (rule "close" (formula "37") (ifseqformula "10"))
                              )
                           )
                           (branch "CUT: self.canvas[i_1_0].<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "42"))
                              (rule "close" (formula "38") (ifseqformula "10"))
                           )
                        )
                     )
                  )
                  (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                     (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "commute_and" (formula "35"))
                     (rule "andRight" (formula "30"))
                     (branch "Case 1"
                        (rule "orRight" (formula "30"))
                        (rule "notRight" (formula "30"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "31"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "31"))
                        (rule "concrete_or_2" (formula "29"))
                        (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "1"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "commute_and" (formula "37"))
                           (rule "allLeft" (formula "31") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "31") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "31") (term "0,0"))
                           (rule "concrete_or_2" (formula "31") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,0"))
                           (rule "leq_literals" (formula "31") (term "0,0"))
                           (rule "concrete_and_2" (formula "31") (term "0"))
                           (rule "concrete_or_2" (formula "31"))
                           (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_102"))
                           (rule "simplifySelectOfAnon" (formula "31"))
                           (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                           (rule "eqClose" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                           (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "31") (term "0,0"))
                           (rule "ifthenelse_true" (formula "31") (term "0"))
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "allLeft" (formula "32") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_or_2" (formula "32") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_and_2" (formula "32") (term "0"))
                           (rule "concrete_or_2" (formula "32"))
                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_103"))
                           (rule "simplifySelectOfAnon" (formula "32"))
                           (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                           (rule "eqClose" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                           (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "32") (term "0,0"))
                           (rule "ifthenelse_true" (formula "32") (term "0"))
                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                           (rule "hideAuxiliaryEq" (formula "32"))
                           (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "1"))
                           (rule "concrete_not_1" (formula "19") (term "1"))
                           (rule "concrete_or_4" (formula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                           (rule "inEqSimp_invertInEq1" (formula "19") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                           (rule "times_zero_2" (formula "19") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                           (rule "concrete_and_2" (formula "19") (term "1"))
                           (rule "concrete_or_4" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "8") (term "0"))
                           (rule "concrete_and_2" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "commute_and" (formula "36"))
                           (rule "andRight" (formula "30"))
                           (branch "Case 1"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "30"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "1"))
                              (rule "eq_and" (formula "36"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "30") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "30") (term "1,0"))
                              (rule "concrete_or_4" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_100"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_101"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0"))
                              (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "19") (term "1"))
                              (rule "concrete_or_4" (formula "19"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "inEqSimp_invertInEq1" (formula "18") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "19") (term "0,0"))
                              (rule "concrete_and_2" (formula "19") (term "0"))
                              (rule "concrete_or_2" (formula "19"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_and_2" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "19"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "Case 2"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "31"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0,0"))
                              (rule "concrete_or_2" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_98"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_99"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "inEqSimp_invertInEq1" (formula "18") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                              (rule "times_zero_2" (formula "18") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                              (rule "concrete_and_2" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "18"))
                              (rule "qeq_literals" (formula "7") (term "0"))
                              (rule "concrete_and_2" (formula "7"))
                              (rule "closeFalse" (formula "7"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "orRight" (formula "30"))
                        (rule "notRight" (formula "31"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "commute_and" (formula "37"))
                           (rule "allLeft" (formula "31") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "31") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "31") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "31") (term "1,0"))
                           (rule "concrete_or_4" (formula "31") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                           (rule "concrete_and_2" (formula "31") (term "0"))
                           (rule "concrete_or_2" (formula "31"))
                           (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_90"))
                           (rule "simplifySelectOfAnon" (formula "31"))
                           (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                           (rule "eqClose" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                           (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "31") (term "0,0"))
                           (rule "ifthenelse_true" (formula "31") (term "0"))
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "allLeft" (formula "32") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_or_2" (formula "32") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_and_2" (formula "32") (term "0"))
                           (rule "concrete_or_2" (formula "32"))
                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_91"))
                           (rule "simplifySelectOfAnon" (formula "32"))
                           (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                           (rule "eqClose" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                           (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "32") (term "0,0"))
                           (rule "ifthenelse_true" (formula "32") (term "0"))
                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                           (rule "hideAuxiliaryEq" (formula "32"))
                           (rule "allLeft" (formula "33") (inst "t=i_1_0"))
                           (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "33") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "33") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "33") (term "1,0"))
                           (rule "concrete_or_4" (formula "33") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "33") (term "0,0"))
                           (rule "concrete_and_2" (formula "33") (term "0"))
                           (rule "concrete_or_2" (formula "33"))
                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_92"))
                           (rule "simplifySelectOfAnon" (formula "33"))
                           (rule "elementOfFreshLocs" (formula "33") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "33") (term "0,0,0,0"))
                           (rule "eqClose" (formula "33") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "33") (term "0,0,0"))
                           (rule "equalUnique" (formula "33") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "33") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "33") (term "0,0"))
                           (rule "ifthenelse_true" (formula "33") (term "0"))
                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                           (rule "hideAuxiliaryEq" (formula "33"))
                           (rule "allLeft" (formula "34") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "34") (term "0,0"))
                           (rule "times_zero_2" (formula "34") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "34") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "34") (term "1,0"))
                           (rule "concrete_or_4" (formula "34") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "34") (term "0,0"))
                           (rule "concrete_and_2" (formula "34") (term "0"))
                           (rule "concrete_or_2" (formula "34"))
                           (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_93"))
                           (rule "simplifySelectOfAnon" (formula "34"))
                           (rule "elementOfFreshLocs" (formula "34") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "34") (term "0,0,0,0"))
                           (rule "eqClose" (formula "34") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "34") (term "0,0,0"))
                           (rule "equalUnique" (formula "34") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "34") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "34") (term "0,0"))
                           (rule "ifthenelse_true" (formula "34") (term "0"))
                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                           (rule "hideAuxiliaryEq" (formula "34"))
                           (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "35") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "35") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "35") (term "1,0"))
                           (rule "concrete_or_4" (formula "35") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "35") (term "0,0"))
                           (rule "concrete_and_2" (formula "35") (term "0"))
                           (rule "concrete_or_2" (formula "35"))
                           (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_94"))
                           (rule "simplifySelectOfAnon" (formula "35"))
                           (rule "elementOfFreshLocs" (formula "35") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "35") (term "0,0,0,0"))
                           (rule "eqClose" (formula "35") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "35") (term "0,0,0"))
                           (rule "equalUnique" (formula "35") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "35") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "35") (term "0,0"))
                           (rule "ifthenelse_true" (formula "35") (term "0"))
                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "19") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "19") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "19") (term "1,0"))
                           (rule "concrete_or_4" (formula "19") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0"))
                           (rule "concrete_or_2" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "37"))
                           (rule "concrete_not_2" (formula "10") (term "0"))
                           (rule "concrete_or_1" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                           (rule "times_zero_2" (formula "18") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "18") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0,0"))
                           (rule "concrete_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0"))
                           (rule "concrete_or_2" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "allLeft" (formula "18") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "18") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0,0"))
                           (rule "concrete_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0"))
                           (rule "concrete_or_2" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "36"))
                           (rule "concrete_or_2" (formula "29"))
                           (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "20") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "20") (term "0,0"))
                           (rule "concrete_or_2" (formula "20") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0"))
                           (rule "leq_literals" (formula "20") (term "0,0"))
                           (rule "concrete_and_2" (formula "20") (term "0"))
                           (rule "concrete_or_2" (formula "20"))
                           (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "21") (term "0,0"))
                           (rule "mul_literals" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "21") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "21") (term "0,0"))
                           (rule "concrete_or_2" (formula "21") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,0"))
                           (rule "leq_literals" (formula "21") (term "0,0"))
                           (rule "concrete_and_2" (formula "21") (term "0"))
                           (rule "concrete_or_2" (formula "21"))
                           (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "18") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0,0"))
                           (rule "concrete_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0"))
                           (rule "concrete_or_2" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "38"))
                           (rule "concrete_not_2" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "21") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "21") (term "0,0"))
                           (rule "concrete_or_2" (formula "21") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "21") (term "0,0"))
                           (rule "concrete_and_2" (formula "21") (term "0"))
                           (rule "concrete_or_2" (formula "21"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "21"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "27") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "6"))
                           (rule "leq_literals" (formula "23") (term "0"))
                           (rule "concrete_or_1" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                           (rule "mul_literals" (formula "5") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "22") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "22") (term "0,0"))
                           (rule "concrete_or_2" (formula "22") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,0"))
                           (rule "concrete_and_2" (formula "22") (term "0"))
                           (rule "concrete_or_2" (formula "22"))
                           (rule "cut_direct" (formula "9") (term "0,1"))
                           (branch "CUT: self.canvas[i_1_0].<created> = TRUE TRUE"
                              (rule "concrete_not_1" (formula "10") (term "1"))
                              (rule "concrete_or_4" (formula "10"))
                              (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "42") (term "0") (ifseqformula "10"))
                              (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "10"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                              (rule "cut_direct" (formula "2") (term "0,1"))
                              (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                 (rule "concrete_not_1" (formula "3") (term "1"))
                                 (rule "concrete_or_4" (formula "3"))
                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "43") (term "1,0,1") (ifseqformula "2"))
                                 (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "8"))
                                 (rule "concrete_and_3" (formula "43"))
                                 (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), j_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "35") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "35") (term "1,0"))
                                 (rule "concrete_or_4" (formula "35") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "35") (term "0,0"))
                                 (rule "concrete_and_2" (formula "35") (term "0"))
                                 (rule "concrete_or_2" (formula "35"))
                                 (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_95"))
                                 (rule "simplifySelectOfAnon" (formula "35"))
                                 (rule "elementOfFreshLocs" (formula "35") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "35") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "35") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "35") (term "0,0,0"))
                                 (rule "equalUnique" (formula "35") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "35") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "35") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "35") (term "0"))
                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "35"))
                                 (rule "concrete_and_1" (formula "43"))
                                 (rule "allLeft" (formula "36") (inst "t=j_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "36") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "36") (term "1,0"))
                                 (rule "concrete_or_4" (formula "36") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "36") (term "0,0"))
                                 (rule "concrete_and_2" (formula "36") (term "0"))
                                 (rule "concrete_or_2" (formula "36"))
                                 (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_96"))
                                 (rule "simplifySelectOfAnon" (formula "36"))
                                 (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "36") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                 (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "36") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "36") (term "0"))
                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "allLeft" (formula "36") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "36") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                                 (rule "times_zero_2" (formula "36") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "36") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "36") (term "1,0"))
                                 (rule "concrete_or_4" (formula "36") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "36") (term "0,0"))
                                 (rule "concrete_and_2" (formula "36") (term "0"))
                                 (rule "concrete_or_2" (formula "36"))
                                 (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_97"))
                                 (rule "simplifySelectOfAnon" (formula "36"))
                                 (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "36") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                 (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "36") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "36") (term "0"))
                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                 (rule "close" (formula "45") (ifseqformula "37"))
                              )
                              (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "38"))
                                 (rule "close" (formula "37") (ifseqformula "10"))
                              )
                           )
                           (branch "CUT: self.canvas[i_1_0].<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "42"))
                              (rule "close" (formula "38") (ifseqformula "10"))
                           )
                        )
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "andRight" (formula "30"))
                           (branch "Case 1"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "30"))
                              (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "31"))
                              (rule "concrete_or_2" (formula "29"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "30") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "30") (term "1,0"))
                              (rule "concrete_or_4" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_88"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_89"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_and_2" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "3"))
                              (rule "andLeft" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0"))
                              (rule "add_literals" (formula "18") (term "0"))
                              (rule "leq_literals" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                           (branch "Case 2"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "31"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0,0"))
                              (rule "concrete_or_2" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_78"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_79"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "32") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "32") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "32") (term "0,0"))
                              (rule "concrete_or_2" (formula "32") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0"))
                              (rule "concrete_and_2" (formula "32") (term "0"))
                              (rule "concrete_or_2" (formula "32"))
                              (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_80"))
                              (rule "simplifySelectOfAnon" (formula "32"))
                              (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                              (rule "eqClose" (formula "32") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                              (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "32") (term "0,0"))
                              (rule "ifthenelse_true" (formula "32") (term "0"))
                              (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "allLeft" (formula "33") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "33") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                              (rule "times_zero_2" (formula "33") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "33") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "33") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "33") (term "1,0"))
                              (rule "concrete_or_4" (formula "33") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "33") (term "0,0"))
                              (rule "concrete_and_2" (formula "33") (term "0"))
                              (rule "concrete_or_2" (formula "33"))
                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_81"))
                              (rule "simplifySelectOfAnon" (formula "33"))
                              (rule "elementOfFreshLocs" (formula "33") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "33") (term "0,0,0,0"))
                              (rule "eqClose" (formula "33") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "33") (term "0,0,0"))
                              (rule "equalUnique" (formula "33") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "33") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "33") (term "0,0"))
                              (rule "ifthenelse_true" (formula "33") (term "0"))
                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "34") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "34") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "34") (term "1,0"))
                              (rule "concrete_or_4" (formula "34") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "34") (term "0,0"))
                              (rule "concrete_and_2" (formula "34") (term "0"))
                              (rule "concrete_or_2" (formula "34"))
                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_82"))
                              (rule "simplifySelectOfAnon" (formula "34"))
                              (rule "elementOfFreshLocs" (formula "34") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "34") (term "0,0,0,0"))
                              (rule "eqClose" (formula "34") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "34") (term "0,0,0"))
                              (rule "equalUnique" (formula "34") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "34") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "34") (term "0,0"))
                              (rule "ifthenelse_true" (formula "34") (term "0"))
                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                              (rule "hideAuxiliaryEq" (formula "34"))
                              (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "20") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "20") (term "1,0"))
                              (rule "concrete_or_4" (formula "20") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "20") (term "0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0"))
                              (rule "concrete_or_2" (formula "20"))
                              (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "18") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_and_2" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "37"))
                              (rule "concrete_not_2" (formula "9") (term "0"))
                              (rule "concrete_or_1" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "17") (term "0,0"))
                              (rule "times_zero_2" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "17") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "17") (term "0,0"))
                              (rule "concrete_and_2" (formula "17") (term "0"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0"))
                              (rule "times_zero_2" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "20") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0,0"))
                              (rule "concrete_or_2" (formula "20") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,0"))
                              (rule "leq_literals" (formula "20") (term "0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0"))
                              (rule "concrete_or_2" (formula "20"))
                              (rule "allLeft" (formula "17") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "17") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "17") (term "0,0"))
                              (rule "concrete_or_2" (formula "17") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0"))
                              (rule "leq_literals" (formula "17") (term "0,0"))
                              (rule "concrete_and_2" (formula "17") (term "0"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "37"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "17") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "17") (term "0,0"))
                              (rule "concrete_and_2" (formula "17") (term "0"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "allLeft" (formula "21") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "21") (term "0,0"))
                              (rule "concrete_or_2" (formula "21") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "21") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "21") (term "0,0"))
                              (rule "concrete_and_2" (formula "21") (term "0"))
                              (rule "concrete_or_2" (formula "21"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "21"))
                              (rule "applyEq" (formula "27") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "6"))
                              (rule "leq_literals" (formula "23") (term "0"))
                              (rule "concrete_or_1" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                              (rule "mul_literals" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "22") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "22") (term "0,0"))
                              (rule "concrete_or_2" (formula "22") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0"))
                              (rule "leq_literals" (formula "22") (term "0,0"))
                              (rule "concrete_and_2" (formula "22") (term "0"))
                              (rule "concrete_or_2" (formula "22"))
                              (rule "cut_direct" (formula "9") (term "0,1"))
                              (branch "CUT: self.canvas[i_1_0].<created> = TRUE TRUE"
                                 (rule "concrete_not_1" (formula "10") (term "1"))
                                 (rule "concrete_or_4" (formula "10"))
                                 (rule "applyEq" (formula "48") (term "1,0,1") (ifseqformula "10"))
                                 (rule "applyEq" (formula "48") (term "1,0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                                 (rule "cut_direct" (formula "46") (term "0"))
                                 (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE TRUE"
                                    (rule "concrete_and_1" (formula "47"))
                                    (rule "allLeft" (formula "37") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0,0"))
                                    (rule "concrete_or_2" (formula "37") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0"))
                                    (rule "concrete_or_2" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_85"))
                                    (rule "simplifySelectOfAnon" (formula "37"))
                                    (rule "elementOfFreshLocs" (formula "37") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "37") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "37") (term "0,0,0"))
                                    (rule "equalUnique" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "37") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "37") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "37") (term "0"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "37"))
                                    (rule "concrete_and_3" (formula "47"))
                                    (rule "allLeft" (formula "38") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "38") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "38") (term "1,0"))
                                    (rule "concrete_or_4" (formula "38") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "38") (term "0,0"))
                                    (rule "concrete_and_2" (formula "38") (term "0"))
                                    (rule "concrete_or_2" (formula "38"))
                                    (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_86"))
                                    (rule "simplifySelectOfAnon" (formula "38"))
                                    (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "38") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "38") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "38") (term "0,0,0"))
                                    (rule "equalUnique" (formula "38") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "38") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "38") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "38") (term "0"))
                                    (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "38") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "38") (term "1,0"))
                                    (rule "concrete_or_4" (formula "38") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "38") (term "0,0"))
                                    (rule "concrete_and_2" (formula "38") (term "0"))
                                    (rule "concrete_or_2" (formula "38"))
                                    (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_87"))
                                    (rule "simplifySelectOfAnon" (formula "38"))
                                    (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "38") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "38") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "38") (term "0,0,0"))
                                    (rule "equalUnique" (formula "38") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "38") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "38") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "38") (term "0"))
                                    (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                    (rule "close" (formula "49") (ifseqformula "39"))
                                 )
                                 (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE FALSE"
                                    (rule "concrete_and_2" (formula "47"))
                                    (rule "false_right" (formula "47"))
                                    (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "36") (term "0,0"))
                                    (rule "concrete_or_2" (formula "36") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0"))
                                    (rule "leq_literals" (formula "36") (term "0,0"))
                                    (rule "concrete_and_2" (formula "36") (term "0"))
                                    (rule "concrete_or_2" (formula "36"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_83"))
                                    (rule "simplifySelectOfAnon" (formula "36"))
                                    (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                    (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "36") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "36") (term "0"))
                                    (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "36"))
                                    (rule "concrete_and_1" (formula "46"))
                                    (rule "allLeft" (formula "37") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0,0"))
                                    (rule "concrete_or_2" (formula "37") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0"))
                                    (rule "concrete_or_2" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_84"))
                                    (rule "simplifySelectOfAnon" (formula "37"))
                                    (rule "elementOfFreshLocs" (formula "37") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "37") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "37") (term "0,0,0"))
                                    (rule "equalUnique" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "37") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "37") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "37") (term "0"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                    (rule "close" (formula "48") (ifseqformula "38"))
                                 )
                              )
                              (branch "CUT: self.canvas[i_1_0].<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "42"))
                                 (rule "close" (formula "38") (ifseqformula "10"))
                              )
                           )
                        )
                     )
                  )
               )
               (branch " !( ( !self.canvas[i_1_0] = null | self.canvas[i_1_0] = self.canvas[depth]) & ( self.canvas[i_1_0] = self.canvas[depth] | !self.canvas[i_1_0].<created> = TRUE)) & self.canvas[i_1_0][j_0] = TRUE"
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "30"))
                  (rule "ifthenelse_false" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "29"))
                  (rule "ifthenelse_false" (formula "2") (term "0"))
                  (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "commute_and" (formula "32"))
                  (rule "andRight" (formula "28"))
                  (branch "Case 1"
                     (rule "orRight" (formula "28"))
                     (rule "notRight" (formula "28"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "29"))
                     (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "33") (term "1,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0,1,0") (ifseqformula "10"))
                     (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "30"))
                     (rule "concrete_or_2" (formula "28"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                        (rule "andLeft" (formula "3"))
                        (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "commute_and" (formula "36"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "allLeft" (formula "31") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "31") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "31") (term "1,0"))
                           (rule "concrete_or_4" (formula "31") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                           (rule "concrete_and_2" (formula "31") (term "0"))
                           (rule "concrete_or_2" (formula "31"))
                           (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_76"))
                           (rule "simplifySelectOfAnon" (formula "31"))
                           (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                           (rule "eqClose" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                           (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "31") (term "0,0"))
                           (rule "ifthenelse_true" (formula "31") (term "0"))
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "allLeft" (formula "32") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_or_2" (formula "32") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_and_2" (formula "32") (term "0"))
                           (rule "concrete_or_2" (formula "32"))
                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_77"))
                           (rule "simplifySelectOfAnon" (formula "32"))
                           (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                           (rule "eqClose" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                           (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "32") (term "0,0"))
                           (rule "ifthenelse_true" (formula "32") (term "0"))
                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                           (rule "hideAuxiliaryEq" (formula "32"))
                           (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                           (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "1"))
                           (rule "concrete_not_1" (formula "19") (term "1"))
                           (rule "concrete_or_4" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                           (rule "concrete_and_2" (formula "19") (term "1"))
                           (rule "concrete_or_4" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "10") (term "0"))
                           (rule "concrete_and_2" (formula "10"))
                           (rule "closeFalse" (formula "10"))
                        )
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "andRight" (formula "30"))
                           (branch "Case 1"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "30"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "1"))
                              (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "10"))
                              (rule "concrete_and_1" (formula "36"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0,0"))
                              (rule "concrete_or_2" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_74"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_75"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "19") (term "1"))
                              (rule "concrete_or_4" (formula "19"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                              (rule "concrete_and_2" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "19") (term "0,0"))
                              (rule "concrete_and_2" (formula "19") (term "0"))
                              (rule "concrete_or_2" (formula "19"))
                              (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "18"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (rule "concrete_and_2" (formula "9"))
                              (rule "closeFalse" (formula "9"))
                           )
                           (branch "Case 2"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "31"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0,0"))
                              (rule "concrete_or_2" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_72"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_73"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                              (rule "concrete_and_2" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (rule "concrete_and_2" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                        )
                     )
                     (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                        (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "commute_and" (formula "35"))
                        (rule "andRight" (formula "29"))
                        (branch "Case 1"
                           (rule "orRight" (formula "29"))
                           (rule "notRight" (formula "29"))
                           (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "1"))
                           (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "9"))
                           (rule "concrete_and_3" (formula "36"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "30"))
                           (rule "apply_eq_boolean_rigid" (formula "3") (term "1") (ifseqformula "35"))
                           (rule "false_to_not_true" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "ifEqualsTRUE" (formula "29"))
                           (rule "orRight" (formula "29"))
                           (rule "hideAuxiliaryEqConcrete2" (formula "36"))
                           (rule "commute_and_2" (formula "29"))
                           (rule "commute_and" (formula "29") (term "0"))
                           (rule "allLeft" (formula "28") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "28") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "28") (term "1,0"))
                           (rule "concrete_or_4" (formula "28") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "28") (term "0,0"))
                           (rule "concrete_and_2" (formula "28") (term "0"))
                           (rule "concrete_or_2" (formula "28"))
                           (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_70"))
                           (rule "simplifySelectOfAnon" (formula "28"))
                           (rule "elementOfFreshLocs" (formula "28") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "28") (term "0,0,0,0"))
                           (rule "eqClose" (formula "28") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "28") (term "0,0,0"))
                           (rule "equalUnique" (formula "28") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "28") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "28") (term "0,0"))
                           (rule "ifthenelse_true" (formula "28") (term "0"))
                           (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "29") (term "0,0"))
                           (rule "concrete_or_2" (formula "29") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "29") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "29") (term "0,0"))
                           (rule "concrete_and_2" (formula "29") (term "0"))
                           (rule "concrete_or_2" (formula "29"))
                           (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_71"))
                           (rule "simplifySelectOfAnon" (formula "29"))
                           (rule "elementOfFreshLocs" (formula "29") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "29") (term "0,0,0,0"))
                           (rule "eqClose" (formula "29") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "29") (term "0,0,0"))
                           (rule "equalUnique" (formula "29") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "29") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "29") (term "0,0"))
                           (rule "ifthenelse_true" (formula "29") (term "0"))
                           (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                           (rule "hideAuxiliaryEq" (formula "29"))
                           (rule "allLeft" (formula "16") (inst "t=i_1_0"))
                           (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "2"))
                           (rule "concrete_not_1" (formula "16") (term "1"))
                           (rule "concrete_or_4" (formula "16"))
                           (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "1"))
                           (rule "concrete_not_1" (formula "17") (term "1"))
                           (rule "concrete_or_4" (formula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                           (rule "inEqSimp_invertInEq1" (formula "17") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "16") (term "0,0"))
                           (rule "concrete_and_2" (formula "16") (term "0"))
                           (rule "concrete_or_2" (formula "16"))
                           (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                           (rule "add_literals" (formula "17") (term "0,0,1"))
                           (rule "leq_literals" (formula "17") (term "0,1"))
                           (rule "concrete_and_2" (formula "17") (term "1"))
                           (rule "concrete_or_4" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "16"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_literals" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "29"))
                           (rule "notRight" (formula "30"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "commute_and" (formula "37"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0,0"))
                              (rule "concrete_or_2" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_68"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_69"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                              (rule "concrete_and_2" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "18") (term "0"))
                              (rule "concrete_and_2" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "andRight" (formula "29"))
                              (branch "Case 1"
                                 (rule "orRight" (formula "29"))
                                 (rule "notRight" (formula "29"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "1"))
                                 (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "9"))
                                 (rule "concrete_and_1" (formula "36"))
                                 (rule "allLeft" (formula "29") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0,0"))
                                 (rule "concrete_or_2" (formula "29") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                 (rule "leq_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0"))
                                 (rule "concrete_or_2" (formula "29"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_66"))
                                 (rule "simplifySelectOfAnon" (formula "29"))
                                 (rule "elementOfFreshLocs" (formula "29") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "29") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0,0,0"))
                                 (rule "equalUnique" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "29") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "29") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "29") (term "0"))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                 (rule "hideAuxiliaryEq" (formula "29"))
                                 (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_and_2" (formula "30") (term "0"))
                                 (rule "concrete_or_2" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_67"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                 (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                                 (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "30") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "30") (term "0"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "17") (term "1"))
                                 (rule "concrete_or_4" (formula "17"))
                                 (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                                 (rule "concrete_not_1" (formula "18") (term "1"))
                                 (rule "concrete_or_4" (formula "18"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "18") (term "0,0"))
                                 (rule "concrete_and_2" (formula "18") (term "0"))
                                 (rule "concrete_or_2" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "17"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "29"))
                                 (rule "notRight" (formula "30"))
                                 (rule "allLeft" (formula "29") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "29") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "29") (term "1,0"))
                                 (rule "concrete_or_4" (formula "29") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0"))
                                 (rule "concrete_or_2" (formula "29"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_64"))
                                 (rule "simplifySelectOfAnon" (formula "29"))
                                 (rule "elementOfFreshLocs" (formula "29") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "29") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0,0,0"))
                                 (rule "equalUnique" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "29") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "29") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "29") (term "0"))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                 (rule "hideAuxiliaryEq" (formula "29"))
                                 (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_and_2" (formula "30") (term "0"))
                                 (rule "concrete_or_2" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_65"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                 (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                                 (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "30") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "30") (term "0"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "17") (term "1"))
                                 (rule "concrete_or_4" (formula "17"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,1"))
                                 (rule "leq_literals" (formula "17") (term "0,1"))
                                 (rule "concrete_and_2" (formula "17") (term "1"))
                                 (rule "concrete_or_4" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                 (rule "concrete_and_2" (formula "17"))
                                 (rule "closeFalse" (formula "17"))
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "orRight" (formula "28"))
                     (rule "notRight" (formula "29"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0,1,0") (ifseqformula "10"))
                     (rule "ifthenelse_split" (formula "3") (term "0"))
                     (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                        (rule "andLeft" (formula "3"))
                        (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "commute_and" (formula "36"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "allLeft" (formula "31") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "31") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "31") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "31") (term "1,0"))
                           (rule "concrete_or_4" (formula "31") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                           (rule "concrete_and_2" (formula "31") (term "0"))
                           (rule "concrete_or_2" (formula "31"))
                           (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_56"))
                           (rule "simplifySelectOfAnon" (formula "31"))
                           (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                           (rule "eqClose" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                           (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "31") (term "0,0"))
                           (rule "ifthenelse_true" (formula "31") (term "0"))
                           (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "allLeft" (formula "32") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_or_2" (formula "32") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_and_2" (formula "32") (term "0"))
                           (rule "concrete_or_2" (formula "32"))
                           (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_57"))
                           (rule "simplifySelectOfAnon" (formula "32"))
                           (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                           (rule "eqClose" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                           (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "32") (term "0,0"))
                           (rule "ifthenelse_true" (formula "32") (term "0"))
                           (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                           (rule "hideAuxiliaryEq" (formula "32"))
                           (rule "allLeft" (formula "33") (inst "t=i_1_0"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "33") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "33") (term "0,0"))
                           (rule "concrete_or_2" (formula "33") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0"))
                           (rule "leq_literals" (formula "33") (term "0,0"))
                           (rule "concrete_and_2" (formula "33") (term "0"))
                           (rule "concrete_or_2" (formula "33"))
                           (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_58"))
                           (rule "simplifySelectOfAnon" (formula "33"))
                           (rule "elementOfFreshLocs" (formula "33") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "33") (term "0,0,0,0"))
                           (rule "eqClose" (formula "33") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "33") (term "0,0,0"))
                           (rule "equalUnique" (formula "33") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "33") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "33") (term "0,0"))
                           (rule "ifthenelse_true" (formula "33") (term "0"))
                           (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                           (rule "hideAuxiliaryEq" (formula "33"))
                           (rule "allLeft" (formula "34") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "34") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                           (rule "times_zero_2" (formula "34") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "34") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "34") (term "1,0"))
                           (rule "concrete_or_4" (formula "34") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "34") (term "0,0"))
                           (rule "concrete_and_2" (formula "34") (term "0"))
                           (rule "concrete_or_2" (formula "34"))
                           (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_59"))
                           (rule "simplifySelectOfAnon" (formula "34"))
                           (rule "elementOfFreshLocs" (formula "34") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "34") (term "0,0,0,0"))
                           (rule "eqClose" (formula "34") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "34") (term "0,0,0"))
                           (rule "equalUnique" (formula "34") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "34") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "34") (term "0,0"))
                           (rule "ifthenelse_true" (formula "34") (term "0"))
                           (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                           (rule "hideAuxiliaryEq" (formula "34"))
                           (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "35") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "35") (term "0,0"))
                           (rule "concrete_or_2" (formula "35") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "leq_literals" (formula "35") (term "0,0"))
                           (rule "concrete_and_2" (formula "35") (term "0"))
                           (rule "concrete_or_2" (formula "35"))
                           (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_60"))
                           (rule "simplifySelectOfAnon" (formula "35"))
                           (rule "elementOfFreshLocs" (formula "35") (term "1,0,0"))
                           (rule "elementOfAllFields" (formula "35") (term "0,0,0,0"))
                           (rule "eqClose" (formula "35") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "35") (term "0,0,0"))
                           (rule "equalUnique" (formula "35") (term "0,0,0,0"))
                           (rule "concrete_not_2" (formula "35") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "35") (term "0,0"))
                           (rule "ifthenelse_true" (formula "35") (term "0"))
                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "allLeft" (formula "19") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "19") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0,0"))
                           (rule "concrete_or_2" (formula "19") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "leq_literals" (formula "19") (term "0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0"))
                           (rule "concrete_or_2" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "37"))
                           (rule "concrete_or_2" (formula "30"))
                           (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "19") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0,0"))
                           (rule "concrete_or_2" (formula "19") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "leq_literals" (formula "19") (term "0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0"))
                           (rule "concrete_or_2" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "19") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0,0"))
                           (rule "concrete_or_2" (formula "19") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "leq_literals" (formula "19") (term "0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0"))
                           (rule "concrete_or_2" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "37"))
                           (rule "concrete_not_2" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                           (rule "leq_literals" (formula "20") (term "0,0"))
                           (rule "concrete_or_2" (formula "20") (term "0"))
                           (rule "inEqSimp_commuteGeq" (formula "20") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                           (rule "concrete_and_2" (formula "20") (term "0"))
                           (rule "concrete_or_2" (formula "20"))
                           (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "27") (term "1,1,1,0,0,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "20"))
                           (rule "applyEq" (formula "24") (term "1,1,1,0,0,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "8"))
                           (rule "leq_literals" (formula "22") (term "0"))
                           (rule "concrete_or_1" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                           (rule "mul_literals" (formula "7") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "mul_literals" (formula "7") (term "1"))
                           (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                           (rule "times_zero_2" (formula "18") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "18") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0,0"))
                           (rule "concrete_or_2" (formula "18") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                           (rule "concrete_and_2" (formula "18") (term "0"))
                           (rule "concrete_or_2" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                           (rule "concrete_not_2" (formula "3") (term "0"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                           (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "20") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "20") (term "1,0"))
                           (rule "concrete_or_4" (formula "20") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                           (rule "concrete_and_2" (formula "20") (term "0"))
                           (rule "concrete_or_2" (formula "20"))
                           (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_1_0)"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "21") (term "0,1,0"))
                           (rule "concrete_and_2" (formula "21") (term "1,0"))
                           (rule "concrete_or_4" (formula "21") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "21") (term "0,0"))
                           (rule "concrete_and_2" (formula "21") (term "0"))
                           (rule "concrete_or_2" (formula "21"))
                           (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                           (rule "inEqSimp_invertInEq1" (formula "22") (term "0,0"))
                           (rule "mul_literals" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "22") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "22") (term "0,0"))
                           (rule "concrete_or_2" (formula "22") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0"))
                           (rule "leq_literals" (formula "22") (term "0,0"))
                           (rule "concrete_and_2" (formula "22") (term "0"))
                           (rule "concrete_or_2" (formula "22"))
                           (rule "cut_direct" (formula "46") (term "0"))
                           (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE TRUE"
                              (rule "concrete_and_1" (formula "47"))
                              (rule "cut_direct" (formula "4") (term "0,1"))
                              (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                 (rule "concrete_not_1" (formula "5") (term "1"))
                                 (rule "concrete_or_4" (formula "5"))
                                 (rule "applyEq" (formula "49") (term "1,0,1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "39") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                 (rule "cut_direct" (formula "3") (term "0,1"))
                                 (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                    (rule "concrete_not_1" (formula "4") (term "1"))
                                    (rule "concrete_or_4" (formula "4"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "3"))
                                    (rule "eq_and" (formula "44"))
                                    (rule "allLeft" (formula "36") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "36") (term "0,0"))
                                    (rule "concrete_or_2" (formula "36") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                    (rule "leq_literals" (formula "36") (term "0,0"))
                                    (rule "concrete_and_2" (formula "36") (term "0"))
                                    (rule "concrete_or_2" (formula "36"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_63"))
                                    (rule "simplifySelectOfAnon" (formula "36"))
                                    (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                    (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "36") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "36") (term "0"))
                                    (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                    (rule "close" (formula "46") (ifseqformula "37"))
                                 )
                                 (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                    (rule "close" (formula "38") (ifseqformula "11"))
                                 )
                              )
                              (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "40"))
                                 (rule "close" (formula "39") (ifseqformula "11"))
                              )
                           )
                           (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE FALSE"
                              (rule "concrete_and_2" (formula "47"))
                              (rule "false_right" (formula "47"))
                              (rule "cut_direct" (formula "3") (term "0,1"))
                              (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                 (rule "concrete_not_1" (formula "4") (term "1"))
                                 (rule "concrete_or_4" (formula "4"))
                                 (rule "applyEq" (formula "39") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "3"))
                                 (rule "cut_direct" (formula "2") (term "0,1"))
                                 (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                    (rule "concrete_not_1" (formula "3") (term "1"))
                                    (rule "concrete_or_4" (formula "3"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "3"))
                                    (rule "eq_and" (formula "44"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                    (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "35") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "35") (term "1,0"))
                                    (rule "concrete_or_4" (formula "35") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "35") (term "0,0"))
                                    (rule "concrete_and_2" (formula "35") (term "0"))
                                    (rule "concrete_or_2" (formula "35"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_61"))
                                    (rule "simplifySelectOfAnon" (formula "35"))
                                    (rule "elementOfFreshLocs" (formula "35") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "35") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "35") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "35") (term "0,0,0"))
                                    (rule "equalUnique" (formula "35") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "35") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "35") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "35") (term "0"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "allLeft" (formula "36") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "36") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "36") (term "1,0"))
                                    (rule "concrete_or_4" (formula "36") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "36") (term "0,0"))
                                    (rule "concrete_and_2" (formula "36") (term "0"))
                                    (rule "concrete_or_2" (formula "36"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_62"))
                                    (rule "simplifySelectOfAnon" (formula "36"))
                                    (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                    (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "36") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "36") (term "0"))
                                    (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                    (rule "close" (formula "46") (ifseqformula "37"))
                                 )
                                 (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "38"))
                                    (rule "close" (formula "37") (ifseqformula "10"))
                                 )
                              )
                              (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                 (rule "close" (formula "38") (ifseqformula "10"))
                              )
                           )
                        )
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "andRight" (formula "30"))
                           (branch "Case 1"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "30"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "31"))
                              (rule "concrete_or_2" (formula "29"))
                              (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "1"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "30") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "30") (term "1,0"))
                              (rule "concrete_or_4" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_54"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_55"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                              (rule "concrete_and_2" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "18"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (rule "concrete_and_2" (formula "9"))
                              (rule "closeFalse" (formula "9"))
                           )
                           (branch "Case 2"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "31"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "30") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "30") (term "1,0"))
                              (rule "concrete_or_4" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_44"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_45"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "32") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "32") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "32") (term "0,0"))
                              (rule "concrete_or_2" (formula "32") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0"))
                              (rule "concrete_and_2" (formula "32") (term "0"))
                              (rule "concrete_or_2" (formula "32"))
                              (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_46"))
                              (rule "simplifySelectOfAnon" (formula "32"))
                              (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                              (rule "eqClose" (formula "32") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                              (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "32") (term "0,0"))
                              (rule "ifthenelse_true" (formula "32") (term "0"))
                              (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "allLeft" (formula "33") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "33") (term "0,0"))
                              (rule "mul_literals" (formula "33") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "33") (term "0,0"))
                              (rule "concrete_or_2" (formula "33") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0"))
                              (rule "concrete_and_2" (formula "33") (term "0"))
                              (rule "concrete_or_2" (formula "33"))
                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_47"))
                              (rule "simplifySelectOfAnon" (formula "33"))
                              (rule "elementOfFreshLocs" (formula "33") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "33") (term "0,0,0,0"))
                              (rule "eqClose" (formula "33") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "33") (term "0,0,0"))
                              (rule "equalUnique" (formula "33") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "33") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "33") (term "0,0"))
                              (rule "ifthenelse_true" (formula "33") (term "0"))
                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "34") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "34") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "34") (term "1,0"))
                              (rule "concrete_or_4" (formula "34") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "34") (term "0,0"))
                              (rule "concrete_and_2" (formula "34") (term "0"))
                              (rule "concrete_or_2" (formula "34"))
                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_48"))
                              (rule "simplifySelectOfAnon" (formula "34"))
                              (rule "elementOfFreshLocs" (formula "34") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "34") (term "0,0,0,0"))
                              (rule "eqClose" (formula "34") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "34") (term "0,0,0"))
                              (rule "equalUnique" (formula "34") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "34") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "34") (term "0,0"))
                              (rule "ifthenelse_true" (formula "34") (term "0"))
                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                              (rule "hideAuxiliaryEq" (formula "34"))
                              (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "18") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_and_2" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "20") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "20") (term "1,0"))
                              (rule "concrete_or_4" (formula "20") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "20") (term "0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0"))
                              (rule "concrete_or_2" (formula "20"))
                              (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "21") (term "0,0"))
                              (rule "times_zero_2" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "21") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "21") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "21") (term "1,0"))
                              (rule "concrete_or_4" (formula "21") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "21") (term "0,0"))
                              (rule "concrete_and_2" (formula "21") (term "0"))
                              (rule "concrete_or_2" (formula "21"))
                              (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "22") (term "0,0"))
                              (rule "concrete_or_2" (formula "22") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "22") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "22") (term "0,0"))
                              (rule "concrete_and_2" (formula "22") (term "0"))
                              (rule "concrete_or_2" (formula "22"))
                              (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "27") (term "1,1,1,0,0,0,0,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "29") (term "1,1,1,0,0,0,0,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
                              (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0") (ifseqformula "22"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "8"))
                              (rule "leq_literals" (formula "24") (term "0"))
                              (rule "concrete_or_1" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                              (rule "mul_literals" (formula "7") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "18") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "18") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_and_2" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "38"))
                              (rule "concrete_not_2" (formula "3") (term "0"))
                              (rule "concrete_or_1" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "22") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "22") (term "0,0"))
                              (rule "concrete_or_2" (formula "22") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0"))
                              (rule "leq_literals" (formula "22") (term "0,0"))
                              (rule "concrete_and_2" (formula "22") (term "0"))
                              (rule "concrete_or_2" (formula "22"))
                              (rule "allLeft" (formula "17") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "17") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "17") (term "0,0"))
                              (rule "concrete_and_2" (formula "17") (term "0"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "38"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "17") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "17") (term "0,0"))
                              (rule "concrete_or_2" (formula "17") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0"))
                              (rule "leq_literals" (formula "17") (term "0,0"))
                              (rule "concrete_and_2" (formula "17") (term "0"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "cut_direct" (formula "47") (term "0"))
                              (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE TRUE"
                                 (rule "concrete_and_1" (formula "48"))
                                 (rule "cut_direct" (formula "4") (term "0,1"))
                                 (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                    (rule "concrete_not_1" (formula "5") (term "1"))
                                    (rule "concrete_or_4" (formula "5"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "4"))
                                    (rule "allLeft" (formula "37") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "37") (term "0,0"))
                                    (rule "times_zero_2" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0,0"))
                                    (rule "concrete_or_2" (formula "37") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0"))
                                    (rule "concrete_or_2" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_51"))
                                    (rule "simplifySelectOfAnon" (formula "37"))
                                    (rule "elementOfFreshLocs" (formula "37") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "37") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "37") (term "0,0,0"))
                                    (rule "equalUnique" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "37") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "37") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "37") (term "0"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "38") (term "0,0"))
                                    (rule "concrete_or_2" (formula "38") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,0"))
                                    (rule "concrete_and_2" (formula "38") (term "0"))
                                    (rule "concrete_or_2" (formula "38"))
                                    (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_52"))
                                    (rule "simplifySelectOfAnon" (formula "38"))
                                    (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "38") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "38") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "38") (term "0,0,0"))
                                    (rule "equalUnique" (formula "38") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "38") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "38") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "38") (term "0"))
                                    (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "allLeft" (formula "39") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "39") (term "0,0"))
                                    (rule "concrete_or_2" (formula "39") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "39") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0"))
                                    (rule "leq_literals" (formula "39") (term "0,0"))
                                    (rule "concrete_and_2" (formula "39") (term "0"))
                                    (rule "concrete_or_2" (formula "39"))
                                    (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_53"))
                                    (rule "simplifySelectOfAnon" (formula "39"))
                                    (rule "elementOfFreshLocs" (formula "39") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "39") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "39") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "39") (term "0,0,0"))
                                    (rule "equalUnique" (formula "39") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "39") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "39") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "39") (term "0"))
                                    (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "39"))
                                    (rule "concrete_and_3" (formula "50"))
                                    (rule "allLeft" (formula "18") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0,0"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "18") (term "0,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0,0"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "23") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "23") (term "0,0"))
                                    (rule "concrete_or_2" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                    (rule "concrete_and_2" (formula "23") (term "0"))
                                    (rule "concrete_or_2" (formula "23"))
                                    (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "24") (term "0,0"))
                                    (rule "concrete_or_2" (formula "24") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                    (rule "concrete_and_2" (formula "24") (term "0"))
                                    (rule "concrete_or_2" (formula "24"))
                                    (rule "allLeft" (formula "25") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "25") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "25") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "25") (term "1,0"))
                                    (rule "concrete_or_4" (formula "25") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                    (rule "concrete_and_2" (formula "25") (term "0"))
                                    (rule "concrete_or_2" (formula "25"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0,0"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "29") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0,0,0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                    (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                    (rule "concrete_or_1" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                    (rule "inShort" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                    (rule "inShort" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                    (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                    (rule "concrete_or_1" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "51"))
                                    (rule "concrete_or_2" (formula "10"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "11"))
                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                    (rule "concrete_or_3" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                    (rule "concrete_or_1" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                    (rule "inShort" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                    (rule "inShort" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                    (rule "concrete_or_1" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "allLeft" (formula "32") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0,0,0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "32") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "32") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "32") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "32") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "32") (term "0"))
                                    (rule "allLeft" (formula "29") (inst "t=i_1_0"))
                                    (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "58"))
                                    (rule "concrete_or_4" (formula "29") (term "0"))
                                    (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "10"))
                                    (rule "concrete_not_1" (formula "29") (term "1,0"))
                                    (rule "concrete_or_4" (formula "29") (term "0"))
                                    (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "59"))
                                    (rule "concrete_or_4" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "9"))
                                    (rule "qeq_literals" (formula "29") (term "0,0"))
                                    (rule "concrete_and_2" (formula "29") (term "0"))
                                    (rule "concrete_or_2" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "29"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "42"))
                                    (rule "close" (formula "39") (ifseqformula "11"))
                                 )
                              )
                              (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE FALSE"
                                 (rule "concrete_and_2" (formula "48"))
                                 (rule "false_right" (formula "48"))
                                 (rule "cut_direct" (formula "3") (term "0,1"))
                                 (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                    (rule "concrete_not_1" (formula "4") (term "1"))
                                    (rule "concrete_or_4" (formula "4"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "3"))
                                    (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "36") (term "0,0"))
                                    (rule "concrete_or_2" (formula "36") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0"))
                                    (rule "leq_literals" (formula "36") (term "0,0"))
                                    (rule "concrete_and_2" (formula "36") (term "0"))
                                    (rule "concrete_or_2" (formula "36"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_49"))
                                    (rule "simplifySelectOfAnon" (formula "36"))
                                    (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                    (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "36") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "36") (term "0"))
                                    (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "allLeft" (formula "37") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "37") (term "1,0"))
                                    (rule "concrete_or_4" (formula "37") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "37") (term "0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0"))
                                    (rule "concrete_or_2" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_50"))
                                    (rule "simplifySelectOfAnon" (formula "37"))
                                    (rule "elementOfFreshLocs" (formula "37") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "37") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "37") (term "0,0,0"))
                                    (rule "equalUnique" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "37") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "37") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "37") (term "0"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "37"))
                                    (rule "concrete_and_3" (formula "48"))
                                    (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "17") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "17") (term "1,0"))
                                    (rule "concrete_or_4" (formula "17") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "17") (term "0,0"))
                                    (rule "concrete_and_2" (formula "17") (term "0"))
                                    (rule "concrete_or_2" (formula "17"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "allLeft" (formula "22") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "22") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "22") (term "1,0"))
                                    (rule "concrete_or_4" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "22") (term "0,0"))
                                    (rule "concrete_and_2" (formula "22") (term "0"))
                                    (rule "concrete_or_2" (formula "22"))
                                    (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "23") (term "1,0"))
                                    (rule "concrete_or_4" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                    (rule "concrete_and_2" (formula "23") (term "0"))
                                    (rule "concrete_or_2" (formula "23"))
                                    (rule "allLeft" (formula "17") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "17") (term "0,0"))
                                    (rule "concrete_or_2" (formula "17") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                    (rule "leq_literals" (formula "17") (term "0,0"))
                                    (rule "concrete_and_2" (formula "17") (term "0"))
                                    (rule "concrete_or_2" (formula "17"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "allLeft" (formula "26") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "26") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "26") (term "0,0,0,0"))
                                    (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                    (rule "inShort" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                    (rule "concrete_or_1" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                    (rule "inShort" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (rule "concrete_or_1" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                    (rule "concrete_or_3" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "allLeft" (formula "29") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "allLeft" (formula "28") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "28") (term "1,0,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "28") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "28") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "allLeft" (formula "26") (inst "t=i_1_0"))
                                    (rule "replace_known_left" (formula "26") (term "0,1,0,0") (ifseqformula "9"))
                                    (rule "concrete_not_1" (formula "26") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "26") (term "0,0"))
                                    (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "55"))
                                    (rule "concrete_or_4" (formula "26") (term "0"))
                                    (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "56"))
                                    (rule "concrete_or_4" (formula "26"))
                                    (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                    (rule "leq_literals" (formula "26") (term "0,1"))
                                    (rule "concrete_and_2" (formula "26") (term "1"))
                                    (rule "concrete_or_4" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "26") (term "0"))
                                    (rule "concrete_and_2" (formula "26"))
                                    (rule "closeFalse" (formula "26"))
                                 )
                                 (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "41"))
                                    (rule "close" (formula "38") (ifseqformula "10"))
                                 )
                              )
                           )
                        )
                     )
                     (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                        (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "commute_and" (formula "35"))
                        (rule "andRight" (formula "29"))
                        (branch "Case 1"
                           (rule "orRight" (formula "29"))
                           (rule "notRight" (formula "29"))
                           (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "30"))
                           (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "30"))
                           (rule "concrete_or_2" (formula "28"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "commute_and" (formula "37"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "30") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "30") (term "1,0"))
                              (rule "concrete_or_4" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_42"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_43"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "18") (term "1"))
                              (rule "concrete_or_4" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "inEqSimp_invertInEq1" (formula "18") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                              (rule "times_zero_2" (formula "18") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_and_2" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "5"))
                              (rule "andLeft" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0"))
                              (rule "add_literals" (formula "18") (term "0"))
                              (rule "leq_literals" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_and" (formula "36"))
                              (rule "andRight" (formula "29"))
                              (branch "Case 1"
                                 (rule "orRight" (formula "29"))
                                 (rule "notRight" (formula "29"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "1"))
                                 (rule "eq_and" (formula "36"))
                                 (rule "allLeft" (formula "29") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "29") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "29") (term "1,0"))
                                 (rule "concrete_or_4" (formula "29") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0"))
                                 (rule "concrete_or_2" (formula "29"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_40"))
                                 (rule "simplifySelectOfAnon" (formula "29"))
                                 (rule "elementOfFreshLocs" (formula "29") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "29") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0,0,0"))
                                 (rule "equalUnique" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "29") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "29") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "29") (term "0"))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                 (rule "hideAuxiliaryEq" (formula "29"))
                                 (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_and_2" (formula "30") (term "0"))
                                 (rule "concrete_or_2" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_41"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                 (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                                 (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "30") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "30") (term "0"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "17") (term "1"))
                                 (rule "concrete_or_4" (formula "17"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                 (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                                 (rule "concrete_not_1" (formula "18") (term "1"))
                                 (rule "concrete_or_4" (formula "18"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "17") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                 (rule "times_zero_2" (formula "17") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "18") (term "0,0"))
                                 (rule "concrete_and_2" (formula "18") (term "0"))
                                 (rule "concrete_or_2" (formula "18"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                 (rule "leq_literals" (formula "17") (term "0,1"))
                                 (rule "concrete_and_2" (formula "17") (term "1"))
                                 (rule "concrete_or_4" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "18"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "29"))
                                 (rule "notRight" (formula "30"))
                                 (rule "allLeft" (formula "29") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0,0"))
                                 (rule "concrete_or_2" (formula "29") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0"))
                                 (rule "leq_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0"))
                                 (rule "concrete_or_2" (formula "29"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_38"))
                                 (rule "simplifySelectOfAnon" (formula "29"))
                                 (rule "elementOfFreshLocs" (formula "29") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "29") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0,0,0"))
                                 (rule "equalUnique" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "29") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "29") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "29") (term "0"))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                 (rule "hideAuxiliaryEq" (formula "29"))
                                 (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_and_2" (formula "30") (term "0"))
                                 (rule "concrete_or_2" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_39"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                 (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                                 (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "30") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "30") (term "0"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "17") (term "1"))
                                 (rule "concrete_or_4" (formula "17"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "17") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                 (rule "times_zero_2" (formula "17") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "4"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "inEqSimp_homoInEq1" (formula "17"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0"))
                                 (rule "leq_literals" (formula "17"))
                                 (rule "closeFalse" (formula "17"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "29"))
                           (rule "notRight" (formula "30"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "commute_and" (formula "37"))
                              (rule "allLeft" (formula "30") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "30") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "30") (term "1,0"))
                              (rule "concrete_or_4" (formula "30") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_2" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_28"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                              (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "30") (term "0,0"))
                              (rule "ifthenelse_true" (formula "30") (term "0"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (rule "concrete_and_2" (formula "31") (term "0"))
                              (rule "concrete_or_2" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_29"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                              (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                              (rule "eqClose" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                              (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "31") (term "0,0"))
                              (rule "ifthenelse_true" (formula "31") (term "0"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "32") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "32") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "32") (term "0,0"))
                              (rule "concrete_or_2" (formula "32") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0"))
                              (rule "leq_literals" (formula "32") (term "0,0"))
                              (rule "concrete_and_2" (formula "32") (term "0"))
                              (rule "concrete_or_2" (formula "32"))
                              (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_30"))
                              (rule "simplifySelectOfAnon" (formula "32"))
                              (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                              (rule "eqClose" (formula "32") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                              (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "32") (term "0,0"))
                              (rule "ifthenelse_true" (formula "32") (term "0"))
                              (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "allLeft" (formula "33") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "33") (term "0,0"))
                              (rule "mul_literals" (formula "33") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "33") (term "0,0"))
                              (rule "concrete_or_2" (formula "33") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,0"))
                              (rule "concrete_and_2" (formula "33") (term "0"))
                              (rule "concrete_or_2" (formula "33"))
                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_31"))
                              (rule "simplifySelectOfAnon" (formula "33"))
                              (rule "elementOfFreshLocs" (formula "33") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "33") (term "0,0,0,0"))
                              (rule "eqClose" (formula "33") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "33") (term "0,0,0"))
                              (rule "equalUnique" (formula "33") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "33") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "33") (term "0,0"))
                              (rule "ifthenelse_true" (formula "33") (term "0"))
                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "34") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "34") (term "0,0"))
                              (rule "concrete_or_2" (formula "34") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0"))
                              (rule "leq_literals" (formula "34") (term "0,0"))
                              (rule "concrete_and_2" (formula "34") (term "0"))
                              (rule "concrete_or_2" (formula "34"))
                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_32"))
                              (rule "simplifySelectOfAnon" (formula "34"))
                              (rule "elementOfFreshLocs" (formula "34") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "34") (term "0,0,0,0"))
                              (rule "eqClose" (formula "34") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "34") (term "0,0,0"))
                              (rule "equalUnique" (formula "34") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "34") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "34") (term "0,0"))
                              (rule "ifthenelse_true" (formula "34") (term "0"))
                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                              (rule "hideAuxiliaryEq" (formula "34"))
                              (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "20") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "20") (term "1,0"))
                              (rule "concrete_or_4" (formula "20") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "20") (term "0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0"))
                              (rule "concrete_or_2" (formula "20"))
                              (rule "allLeft" (formula "18") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "18") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "15"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_and_2" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "37"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "18") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "18") (term "0,0"))
                              (rule "concrete_or_2" (formula "18") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0"))
                              (rule "leq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_and_2" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "37"))
                              (rule "concrete_not_2" (formula "3") (term "0"))
                              (rule "concrete_or_1" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                              (rule "times_zero_2" (formula "20") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "20") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "20") (term "1,0"))
                              (rule "concrete_or_4" (formula "20") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "20") (term "0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0"))
                              (rule "concrete_or_2" (formula "20"))
                              (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "17") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "17") (term "0,0"))
                              (rule "concrete_and_2" (formula "17") (term "0"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "17") (term "0,0"))
                              (rule "times_zero_2" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "17") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "17") (term "0,0"))
                              (rule "concrete_and_2" (formula "17") (term "0"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "allLeft" (formula "21") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "21") (term "0,0"))
                              (rule "concrete_or_2" (formula "21") (term "0"))
                              (rule "inEqSimp_commuteGeq" (formula "21") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "21") (term "0,0"))
                              (rule "concrete_and_2" (formula "21") (term "0"))
                              (rule "concrete_or_2" (formula "21"))
                              (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "21"))
                              (rule "applyEq" (formula "27") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "7"))
                              (rule "leq_literals" (formula "23") (term "0"))
                              (rule "concrete_or_1" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                              (rule "mul_literals" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "22") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "22") (term "1,0"))
                              (rule "concrete_or_4" (formula "22") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "22") (term "0,0"))
                              (rule "concrete_and_2" (formula "22") (term "0"))
                              (rule "concrete_or_2" (formula "22"))
                              (rule "cut_direct" (formula "47") (term "0"))
                              (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE TRUE"
                                 (rule "concrete_and_1" (formula "48"))
                                 (rule "cut_direct" (formula "4") (term "0,1"))
                                 (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                    (rule "concrete_not_1" (formula "5") (term "1"))
                                    (rule "concrete_or_4" (formula "5"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "4"))
                                    (rule "allLeft" (formula "37") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0,0"))
                                    (rule "concrete_or_2" (formula "37") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0"))
                                    (rule "concrete_or_2" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_35"))
                                    (rule "simplifySelectOfAnon" (formula "37"))
                                    (rule "elementOfFreshLocs" (formula "37") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "37") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "37") (term "0,0,0"))
                                    (rule "equalUnique" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "37") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "37") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "37") (term "0"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "37"))
                                    (rule "concrete_and_3" (formula "48"))
                                    (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "38") (term "0,0"))
                                    (rule "concrete_or_2" (formula "38") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,0"))
                                    (rule "concrete_and_2" (formula "38") (term "0"))
                                    (rule "concrete_or_2" (formula "38"))
                                    (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_36"))
                                    (rule "simplifySelectOfAnon" (formula "38"))
                                    (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "38") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "38") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "38") (term "0,0,0"))
                                    (rule "equalUnique" (formula "38") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "38") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "38") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "38") (term "0"))
                                    (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "allLeft" (formula "39") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "39") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "39") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "39") (term "1,0"))
                                    (rule "concrete_or_4" (formula "39") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "39") (term "0,0"))
                                    (rule "concrete_and_2" (formula "39") (term "0"))
                                    (rule "concrete_or_2" (formula "39"))
                                    (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_37"))
                                    (rule "simplifySelectOfAnon" (formula "39"))
                                    (rule "elementOfFreshLocs" (formula "39") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "39") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "39") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "39") (term "0,0,0"))
                                    (rule "equalUnique" (formula "39") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "39") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "39") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "39") (term "0"))
                                    (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0,0"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0,0"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "23") (term "1,0"))
                                    (rule "concrete_or_4" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                    (rule "concrete_and_2" (formula "23") (term "0"))
                                    (rule "concrete_or_2" (formula "23"))
                                    (rule "allLeft" (formula "18") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "18") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "18") (term "1,0"))
                                    (rule "concrete_or_4" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "24") (term "0,0"))
                                    (rule "concrete_or_2" (formula "24") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                    (rule "concrete_and_2" (formula "24") (term "0"))
                                    (rule "concrete_or_2" (formula "24"))
                                    (rule "allLeft" (formula "25") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "25") (term "0,0"))
                                    (rule "concrete_or_2" (formula "25") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "25") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0"))
                                    (rule "leq_literals" (formula "25") (term "0,0"))
                                    (rule "concrete_and_2" (formula "25") (term "0"))
                                    (rule "concrete_or_2" (formula "25"))
                                    (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                    (rule "concrete_or_1" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                    (rule "inShort" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "allLeft" (formula "31") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0,0,0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "31") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "31") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "31") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "31") (term "0,0,0,0"))
                                    (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                    (rule "inShort" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (rule "concrete_or_1" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "1,0") (ifseqformula "11"))
                                    (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "concrete_or_3" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1,0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "49"))
                                    (rule "concrete_or_2" (formula "2"))
                                    (rule "commute_or_2" (formula "31") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                    (rule "inShort" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                    (rule "concrete_or_1" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "allLeft" (formula "29") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0,0,0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "allLeft" (formula "32") (inst "t=i_1_0"))
                                    (rule "replace_known_right" (formula "32") (term "1,0") (ifseqformula "58"))
                                    (rule "concrete_or_4" (formula "32") (term "0"))
                                    (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "10"))
                                    (rule "concrete_not_1" (formula "32") (term "1,0"))
                                    (rule "concrete_or_4" (formula "32") (term "0"))
                                    (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "59"))
                                    (rule "concrete_or_4" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "9"))
                                    (rule "qeq_literals" (formula "32") (term "0,0"))
                                    (rule "concrete_and_2" (formula "32") (term "0"))
                                    (rule "concrete_or_2" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "32"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "42"))
                                    (rule "close" (formula "39") (ifseqformula "11"))
                                 )
                              )
                              (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE FALSE"
                                 (rule "concrete_and_2" (formula "48"))
                                 (rule "false_right" (formula "48"))
                                 (rule "cut_direct" (formula "3") (term "0,1"))
                                 (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                    (rule "concrete_not_1" (formula "4") (term "1"))
                                    (rule "concrete_or_4" (formula "4"))
                                    (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
                                    (rule "allLeft" (formula "36") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "36") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "36") (term "1,0"))
                                    (rule "concrete_or_4" (formula "36") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "36") (term "0,0"))
                                    (rule "concrete_and_2" (formula "36") (term "0"))
                                    (rule "concrete_or_2" (formula "36"))
                                    (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_33"))
                                    (rule "simplifySelectOfAnon" (formula "36"))
                                    (rule "elementOfFreshLocs" (formula "36") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "36") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                                    (rule "equalUnique" (formula "36") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "36") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "36") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "36") (term "0"))
                                    (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "36"))
                                    (rule "concrete_and_3" (formula "47"))
                                    (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "37") (term "1,0"))
                                    (rule "concrete_or_4" (formula "37") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "37") (term "0,0"))
                                    (rule "concrete_and_2" (formula "37") (term "0"))
                                    (rule "concrete_or_2" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_34"))
                                    (rule "simplifySelectOfAnon" (formula "37"))
                                    (rule "elementOfFreshLocs" (formula "37") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "37") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "37") (term "0,0,0"))
                                    (rule "equalUnique" (formula "37") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "37") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "37") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "37") (term "0"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "allLeft" (formula "17") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "17") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "17") (term "1,0"))
                                    (rule "concrete_or_4" (formula "17") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "17") (term "0,0"))
                                    (rule "concrete_and_2" (formula "17") (term "0"))
                                    (rule "concrete_or_2" (formula "17"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "22") (term "0,0"))
                                    (rule "concrete_or_2" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                    (rule "concrete_and_2" (formula "22") (term "0"))
                                    (rule "concrete_or_2" (formula "22"))
                                    (rule "allLeft" (formula "23") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "23") (term "1,0"))
                                    (rule "concrete_or_4" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                    (rule "concrete_and_2" (formula "23") (term "0"))
                                    (rule "concrete_or_2" (formula "23"))
                                    (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), j_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "17") (term "0,0"))
                                    (rule "concrete_or_2" (formula "17") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                    (rule "leq_literals" (formula "17") (term "0,0"))
                                    (rule "concrete_and_2" (formula "17") (term "0"))
                                    (rule "concrete_or_2" (formula "17"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                    (rule "concrete_or_1" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                                    (rule "inShort" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "allLeft" (formula "28") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "28") (term "1,0,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "28") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "28") (term "0,0,0,0"))
                                    (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                    (rule "concrete_or_1" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                    (rule "inShort" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "commute_or_2" (formula "28") (term "0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "allLeft" (formula "30") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "30") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "30") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0"))
                                    (rule "allLeft" (formula "26") (inst "t=j_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0,0,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "26") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "26") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "allLeft" (formula "29") (inst "t=i_1_0"))
                                    (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "9"))
                                    (rule "concrete_not_1" (formula "29") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "29") (term "0,0"))
                                    (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "55"))
                                    (rule "concrete_or_4" (formula "29") (term "0"))
                                    (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "56"))
                                    (rule "concrete_or_4" (formula "29"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                    (rule "concrete_and_2" (formula "29") (term "1"))
                                    (rule "concrete_or_4" (formula "29"))
                                    (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "29"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (rule "concrete_and_2" (formula "8"))
                                    (rule "closeFalse" (formula "8"))
                                 )
                                 (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "41"))
                                    (rule "close" (formula "38") (ifseqformula "10"))
                                 )
                              )
                           )
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "andRight" (formula "29"))
                              (branch "Case 1"
                                 (rule "orRight" (formula "29"))
                                 (rule "notRight" (formula "29"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "30"))
                                 (rule "concrete_or_2" (formula "28"))
                                 (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "1"))
                                 (rule "allLeft" (formula "29") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0,0"))
                                 (rule "concrete_or_2" (formula "29") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0"))
                                 (rule "leq_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0"))
                                 (rule "concrete_or_2" (formula "29"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_26"))
                                 (rule "simplifySelectOfAnon" (formula "29"))
                                 (rule "elementOfFreshLocs" (formula "29") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "29") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0,0,0"))
                                 (rule "equalUnique" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "29") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "29") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "29") (term "0"))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                 (rule "hideAuxiliaryEq" (formula "29"))
                                 (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_and_2" (formula "30") (term "0"))
                                 (rule "concrete_or_2" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_27"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                 (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                                 (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "30") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "30") (term "0"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "1"))
                                 (rule "concrete_not_1" (formula "17") (term "1"))
                                 (rule "concrete_or_4" (formula "17"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "17") (term "0,0,1"))
                                 (rule "leq_literals" (formula "17") (term "0,1"))
                                 (rule "concrete_and_2" (formula "17") (term "1"))
                                 (rule "concrete_or_4" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                 (rule "concrete_and_2" (formula "17"))
                                 (rule "closeFalse" (formula "17"))
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "29"))
                                 (rule "notRight" (formula "30"))
                                 (rule "allLeft" (formula "29") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "29") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "29") (term "1,0"))
                                 (rule "concrete_or_4" (formula "29") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0"))
                                 (rule "concrete_or_2" (formula "29"))
                                 (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_11"))
                                 (rule "simplifySelectOfAnon" (formula "29"))
                                 (rule "elementOfFreshLocs" (formula "29") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "29") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0,0,0"))
                                 (rule "equalUnique" (formula "29") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "29") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "29") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "29") (term "0"))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                 (rule "hideAuxiliaryEq" (formula "29"))
                                 (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_and_2" (formula "30") (term "0"))
                                 (rule "concrete_or_2" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_12"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                 (rule "elementOfFreshLocs" (formula "30") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "30") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "30") (term "0,0,0"))
                                 (rule "equalUnique" (formula "30") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "30") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "30") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "30") (term "0"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "31") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "31") (term "0,0"))
                                 (rule "concrete_or_2" (formula "31") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                 (rule "leq_literals" (formula "31") (term "0,0"))
                                 (rule "concrete_and_2" (formula "31") (term "0"))
                                 (rule "concrete_or_2" (formula "31"))
                                 (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_13"))
                                 (rule "simplifySelectOfAnon" (formula "31"))
                                 (rule "elementOfFreshLocs" (formula "31") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "31") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "31") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "31") (term "0,0,0"))
                                 (rule "equalUnique" (formula "31") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "31") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "31") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "31") (term "0"))
                                 (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                 (rule "hideAuxiliaryEq" (formula "31"))
                                 (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "32") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "32") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "32") (term "1,0"))
                                 (rule "concrete_or_4" (formula "32") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "32") (term "0,0"))
                                 (rule "concrete_and_2" (formula "32") (term "0"))
                                 (rule "concrete_or_2" (formula "32"))
                                 (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_14"))
                                 (rule "simplifySelectOfAnon" (formula "32"))
                                 (rule "elementOfFreshLocs" (formula "32") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "32") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "32") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                                 (rule "equalUnique" (formula "32") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "32") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "32") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "32") (term "0"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "33") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "33") (term "1,0"))
                                 (rule "concrete_or_4" (formula "33") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "33") (term "0,0"))
                                 (rule "concrete_and_2" (formula "33") (term "0"))
                                 (rule "concrete_or_2" (formula "33"))
                                 (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfAnon" (formula "33"))
                                 (rule "elementOfFreshLocs" (formula "33") (term "1,0,0"))
                                 (rule "elementOfAllFields" (formula "33") (term "0,0,0,0"))
                                 (rule "eqClose" (formula "33") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "33") (term "0,0,0"))
                                 (rule "equalUnique" (formula "33") (term "0,0,0,0"))
                                 (rule "concrete_not_2" (formula "33") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "33") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "33") (term "0"))
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "19") (term "0,0"))
                                 (rule "concrete_or_2" (formula "19") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "19") (term "0,0"))
                                 (rule "concrete_and_2" (formula "19") (term "0"))
                                 (rule "concrete_or_2" (formula "19"))
                                 (rule "applyEq" (formula "24") (term "1,1,1,0,0,0,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "23") (term "1,1,1,0,0,0,0,0") (ifseqformula "19"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                 (rule "concrete_or_1" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "20") (term "0,0"))
                                 (rule "concrete_or_2" (formula "20") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                 (rule "leq_literals" (formula "20") (term "0,0"))
                                 (rule "concrete_and_2" (formula "20") (term "0"))
                                 (rule "concrete_or_2" (formula "20"))
                                 (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "17") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "17") (term "1,0"))
                                 (rule "concrete_or_4" (formula "17") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                 (rule "times_zero_2" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0,0"))
                                 (rule "concrete_or_2" (formula "17") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "21") (term "1,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "21") (term "0,0"))
                                 (rule "concrete_and_2" (formula "21") (term "0"))
                                 (rule "concrete_or_2" (formula "21"))
                                 (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "22") (term "0,0"))
                                 (rule "times_zero_2" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "22") (term "1,0"))
                                 (rule "concrete_or_4" (formula "22") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                 (rule "concrete_and_2" (formula "22") (term "0"))
                                 (rule "concrete_or_2" (formula "22"))
                                 (rule "allLeft" (formula "17") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0,0"))
                                 (rule "concrete_or_2" (formula "17") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "38"))
                                 (rule "concrete_or_2" (formula "31"))
                                 (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0,0"))
                                 (rule "concrete_or_2" (formula "17") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_and_2" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "cut_direct" (formula "48") (term "0"))
                                 (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE TRUE"
                                    (rule "concrete_and_1" (formula "49"))
                                    (rule "cut_direct" (formula "50") (term "0"))
                                    (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE TRUE"
                                       (rule "concrete_and_1" (formula "51"))
                                       (rule "allLeft" (formula "39") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "39") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "39") (term "0,0"))
                                       (rule "times_zero_2" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "39") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "39") (term "1,0"))
                                       (rule "concrete_or_4" (formula "39") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "39") (term "0,0"))
                                       (rule "concrete_and_2" (formula "39") (term "0"))
                                       (rule "concrete_or_2" (formula "39"))
                                       (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_23"))
                                       (rule "simplifySelectOfAnon" (formula "39"))
                                       (rule "elementOfFreshLocs" (formula "39") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "39") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "39") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "39") (term "0,0,0"))
                                       (rule "equalUnique" (formula "39") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "39") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "39") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "39") (term "0"))
                                       (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "40") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "40") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "40") (term "0,0"))
                                       (rule "concrete_or_2" (formula "40") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "40") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0"))
                                       (rule "leq_literals" (formula "40") (term "0,0"))
                                       (rule "concrete_and_2" (formula "40") (term "0"))
                                       (rule "concrete_or_2" (formula "40"))
                                       (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_24"))
                                       (rule "simplifySelectOfAnon" (formula "40"))
                                       (rule "elementOfFreshLocs" (formula "40") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "40") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "40") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "40") (term "0,0,0"))
                                       (rule "equalUnique" (formula "40") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "40") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "40") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "40") (term "0"))
                                       (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "allLeft" (formula "41") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "41") (term "0,0"))
                                       (rule "concrete_or_2" (formula "41") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "41") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0"))
                                       (rule "leq_literals" (formula "41") (term "0,0"))
                                       (rule "concrete_and_2" (formula "41") (term "0"))
                                       (rule "concrete_or_2" (formula "41"))
                                       (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_25"))
                                       (rule "simplifySelectOfAnon" (formula "41"))
                                       (rule "elementOfFreshLocs" (formula "41") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "41") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "41") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "41") (term "0,0,0"))
                                       (rule "equalUnique" (formula "41") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "41") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "41") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "41") (term "0"))
                                       (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "allLeft" (formula "19") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "19") (term "1,0"))
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (rule "concrete_and_2" (formula "19") (term "0"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "25") (term "0,0"))
                                       (rule "concrete_or_2" (formula "25") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "25") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                       (rule "leq_literals" (formula "25") (term "0,0"))
                                       (rule "concrete_and_2" (formula "25") (term "0"))
                                       (rule "concrete_or_2" (formula "25"))
                                       (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "19") (term "1,0"))
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                       (rule "concrete_and_2" (formula "19") (term "0"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                       (rule "times_zero_2" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "26") (term "0,0"))
                                       (rule "concrete_or_2" (formula "26") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                       (rule "leq_literals" (formula "26") (term "0,0"))
                                       (rule "concrete_and_2" (formula "26") (term "0"))
                                       (rule "concrete_or_2" (formula "26"))
                                       (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "19") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                       (rule "times_zero_2" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "19") (term "0,0"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                       (rule "concrete_and_2" (formula "19") (term "0"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "allLeft" (formula "27") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "27") (term "0,0"))
                                       (rule "concrete_or_2" (formula "27") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0"))
                                       (rule "leq_literals" (formula "27") (term "0,0"))
                                       (rule "concrete_and_2" (formula "27") (term "0"))
                                       (rule "concrete_or_2" (formula "27"))
                                       (rule "allLeft" (formula "33") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0,0,0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "33") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "33") (term "0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "33") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "33") (term "0,0,0,0"))
                                       (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (rule "concrete_or_1" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                       (rule "inShort" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (rule "concrete_or_1" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                       (rule "inShort" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                       (rule "inShort" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                       (rule "concrete_or_1" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "1,0") (ifseqformula "12"))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "51"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                                       (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "5"))
                                       (rule "concrete_or_3" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,0") (ifseqformula "12"))
                                       (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "54"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                       (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "25") (term "0"))
                                       (rule "concrete_or_1" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                       (rule "inShort" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                       (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "26") (term "0"))
                                       (rule "concrete_or_1" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                       (rule "inShort" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "allLeft" (formula "33") (inst "t=i_1_0"))
                                       (rule "replace_known_left" (formula "33") (term "0,1,0,0") (ifseqformula "11"))
                                       (rule "concrete_not_1" (formula "33") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "33") (term "0,0"))
                                       (rule "replace_known_right" (formula "33") (term "1,0") (ifseqformula "61"))
                                       (rule "concrete_or_4" (formula "33") (term "0"))
                                       (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "62"))
                                       (rule "concrete_or_4" (formula "33"))
                                       (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                       (rule "leq_literals" (formula "33") (term "0,1"))
                                       (rule "concrete_and_2" (formula "33") (term "1"))
                                       (rule "concrete_or_4" (formula "33"))
                                       (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "33"))
                                       (rule "qeq_literals" (formula "10") (term "0"))
                                       (rule "concrete_and_2" (formula "10"))
                                       (rule "closeFalse" (formula "10"))
                                    )
                                    (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE FALSE"
                                       (rule "concrete_and_2" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "allLeft" (formula "38") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "38") (term "0,0"))
                                       (rule "times_zero_2" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "38") (term "0,0"))
                                       (rule "concrete_or_2" (formula "38") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0"))
                                       (rule "leq_literals" (formula "38") (term "0,0"))
                                       (rule "concrete_and_2" (formula "38") (term "0"))
                                       (rule "concrete_or_2" (formula "38"))
                                       (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_20"))
                                       (rule "simplifySelectOfAnon" (formula "38"))
                                       (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "38") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "38") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "38") (term "0,0,0"))
                                       (rule "equalUnique" (formula "38") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "38") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "38") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "38") (term "0"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "allLeft" (formula "39") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "39") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "39") (term "1,0"))
                                       (rule "concrete_or_4" (formula "39") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "39") (term "0,0"))
                                       (rule "concrete_and_2" (formula "39") (term "0"))
                                       (rule "concrete_or_2" (formula "39"))
                                       (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_21"))
                                       (rule "simplifySelectOfAnon" (formula "39"))
                                       (rule "elementOfFreshLocs" (formula "39") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "39") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "39") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "39") (term "0,0,0"))
                                       (rule "equalUnique" (formula "39") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "39") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "39") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "39") (term "0"))
                                       (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "allLeft" (formula "40") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "40") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "40") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "40") (term "0,0"))
                                       (rule "concrete_or_2" (formula "40") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "40") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0"))
                                       (rule "leq_literals" (formula "40") (term "0,0"))
                                       (rule "concrete_and_2" (formula "40") (term "0"))
                                       (rule "concrete_or_2" (formula "40"))
                                       (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_22"))
                                       (rule "simplifySelectOfAnon" (formula "40"))
                                       (rule "elementOfFreshLocs" (formula "40") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "40") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "40") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "40") (term "0,0,0"))
                                       (rule "equalUnique" (formula "40") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "40") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "40") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "40") (term "0"))
                                       (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "24") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "24") (term "1,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "24") (term "0,0"))
                                       (rule "concrete_and_2" (formula "24") (term "0"))
                                       (rule "concrete_or_2" (formula "24"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (rule "concrete_and_2" (formula "18") (term "0"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "notLeft" (formula "18"))
                                       (rule "allLeft" (formula "18") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (rule "concrete_and_2" (formula "18") (term "0"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "notLeft" (formula "18"))
                                       (rule "allLeft" (formula "25") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "25") (term "0,0"))
                                       (rule "concrete_or_2" (formula "25") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "25") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                       (rule "leq_literals" (formula "25") (term "0,0"))
                                       (rule "concrete_and_2" (formula "25") (term "0"))
                                       (rule "concrete_or_2" (formula "25"))
                                       (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,1,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "26") (term "0,0"))
                                       (rule "times_zero_2" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "26") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "26") (term "1,0"))
                                       (rule "concrete_or_4" (formula "26") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "26") (term "0,0"))
                                       (rule "concrete_and_2" (formula "26") (term "0"))
                                       (rule "concrete_or_2" (formula "26"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (rule "concrete_and_2" (formula "18") (term "0"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "notLeft" (formula "18"))
                                       (rule "allLeft" (formula "30") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0,0,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0,0,0,0"))
                                       (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                       (rule "concrete_or_1" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                       (rule "inShort" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (rule "concrete_or_1" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                       (rule "inShort" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (rule "concrete_or_1" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                       (rule "inShort" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "1,0") (ifseqformula "11"))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "52"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "11"))
                                       (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "5"))
                                       (rule "concrete_or_3" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1,0") (ifseqformula "11"))
                                       (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "3"))
                                       (rule "concrete_or_3" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "commute_or_2" (formula "30") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                       (rule "inShort" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                       (rule "concrete_or_1" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                                       (rule "inShort" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                       (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "25") (term "0"))
                                       (rule "concrete_or_1" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "allLeft" (formula "33") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "33") (term "1,0,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "33") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0,0,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "33") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "33") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                       (rule "inShort" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "allLeft" (formula "30") (inst "t=i_1_0"))
                                       (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "61"))
                                       (rule "concrete_or_4" (formula "30") (term "0"))
                                       (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "10"))
                                       (rule "concrete_not_1" (formula "30") (term "1,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0"))
                                       (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "62"))
                                       (rule "concrete_or_4" (formula "30"))
                                       (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                       (rule "concrete_and_2" (formula "30") (term "1"))
                                       (rule "concrete_or_4" (formula "30"))
                                       (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "30"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                       (rule "concrete_and_2" (formula "9"))
                                       (rule "closeFalse" (formula "9"))
                                    )
                                 )
                                 (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE FALSE"
                                    (rule "concrete_and_2" (formula "49"))
                                    (rule "false_right" (formula "49"))
                                    (rule "cut_direct" (formula "49") (term "0"))
                                    (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE TRUE"
                                       (rule "concrete_and_1" (formula "50"))
                                       (rule "allLeft" (formula "38") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "38") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "38") (term "1,0"))
                                       (rule "concrete_or_4" (formula "38") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "38") (term "0,0"))
                                       (rule "concrete_and_2" (formula "38") (term "0"))
                                       (rule "concrete_or_2" (formula "38"))
                                       (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_18"))
                                       (rule "simplifySelectOfAnon" (formula "38"))
                                       (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "38") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "38") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "38") (term "0,0,0"))
                                       (rule "equalUnique" (formula "38") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "38") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "38") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "38") (term "0"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "39") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "39") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "39") (term "1,0"))
                                       (rule "concrete_or_4" (formula "39") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "39") (term "0,0"))
                                       (rule "concrete_and_2" (formula "39") (term "0"))
                                       (rule "concrete_or_2" (formula "39"))
                                       (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_19"))
                                       (rule "simplifySelectOfAnon" (formula "39"))
                                       (rule "elementOfFreshLocs" (formula "39") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "39") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "39") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "39") (term "0,0,0"))
                                       (rule "equalUnique" (formula "39") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "39") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "39") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "39") (term "0"))
                                       (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "allLeft" (formula "18") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (rule "concrete_and_2" (formula "18") (term "0"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "notLeft" (formula "18"))
                                       (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "24") (term "0,0"))
                                       (rule "concrete_or_2" (formula "24") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                       (rule "leq_literals" (formula "24") (term "0,0"))
                                       (rule "concrete_and_2" (formula "24") (term "0"))
                                       (rule "concrete_or_2" (formula "24"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (rule "concrete_and_2" (formula "18") (term "0"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "notLeft" (formula "18"))
                                       (rule "allLeft" (formula "25") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "25") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "25") (term "1,0"))
                                       (rule "concrete_or_4" (formula "25") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "25") (term "0,0"))
                                       (rule "concrete_and_2" (formula "25") (term "0"))
                                       (rule "concrete_or_2" (formula "25"))
                                       (rule "allLeft" (formula "30") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0,0,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0,0,0,0"))
                                       (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                       (rule "inShort" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                       (rule "concrete_or_1" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "commute_or_2" (formula "30") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (rule "concrete_or_1" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                       (rule "inShort" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (rule "concrete_or_1" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                       (rule "inShort" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "1,0") (ifseqformula "11"))
                                       (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "4"))
                                       (rule "concrete_or_3" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "1,0") (ifseqformula "11"))
                                       (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "5"))
                                       (rule "concrete_or_3" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "11"))
                                       (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                       (rule "concrete_or_3" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "allLeft" (formula "32") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0,0,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "32") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "32") (term "0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "32") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "32") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "32") (term "0"))
                                       (rule "allLeft" (formula "30") (inst "t=i_1_0"))
                                       (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "10"))
                                       (rule "concrete_not_1" (formula "30") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0,0"))
                                       (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "58"))
                                       (rule "concrete_or_4" (formula "30") (term "0"))
                                       (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "59"))
                                       (rule "concrete_or_4" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "9"))
                                       (rule "qeq_literals" (formula "30") (term "0,0"))
                                       (rule "concrete_and_2" (formula "30") (term "0"))
                                       (rule "concrete_or_2" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "30"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE FALSE"
                                       (rule "concrete_and_2" (formula "50"))
                                       (rule "false_right" (formula "50"))
                                       (rule "allLeft" (formula "37") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "37") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "37") (term "1,0"))
                                       (rule "concrete_or_4" (formula "37") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "37") (term "0,0"))
                                       (rule "concrete_and_2" (formula "37") (term "0"))
                                       (rule "concrete_or_2" (formula "37"))
                                       (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_16"))
                                       (rule "simplifySelectOfAnon" (formula "37"))
                                       (rule "elementOfFreshLocs" (formula "37") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "37") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "37") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "37") (term "0,0,0"))
                                       (rule "equalUnique" (formula "37") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "37") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "37") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "37") (term "0"))
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "38") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "38") (term "1,0"))
                                       (rule "concrete_or_4" (formula "38") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "38") (term "0,0"))
                                       (rule "concrete_and_2" (formula "38") (term "0"))
                                       (rule "concrete_or_2" (formula "38"))
                                       (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_17"))
                                       (rule "simplifySelectOfAnon" (formula "38"))
                                       (rule "elementOfFreshLocs" (formula "38") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "38") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "38") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "38") (term "0,0,0"))
                                       (rule "equalUnique" (formula "38") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "38") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "38") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "38") (term "0"))
                                       (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "23") (term "0,0"))
                                       (rule "concrete_or_2" (formula "23") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                       (rule "concrete_and_2" (formula "23") (term "0"))
                                       (rule "concrete_or_2" (formula "23"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "17") (term "1,0"))
                                       (rule "concrete_or_4" (formula "17") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "17") (term "0,0"))
                                       (rule "concrete_and_2" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "allLeft" (formula "24") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "24") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "24") (term "1,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "24") (term "0,0"))
                                       (rule "concrete_and_2" (formula "24") (term "0"))
                                       (rule "concrete_or_2" (formula "24"))
                                       (rule "allLeft" (formula "17") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "17") (term "0,0"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                       (rule "concrete_and_2" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "allLeft" (formula "27") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "27") (term "1,0,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "27") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0,0,0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "27") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "27") (term "0,0,0,0"))
                                       (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                       (rule "inShort" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                       (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                       (rule "concrete_or_1" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "commute_or_2" (formula "27") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                       (rule "concrete_or_1" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                       (rule "inShort" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                       (rule "inShort" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (rule "concrete_or_1" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "10"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "1,0") (ifseqformula "10"))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "49"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "10"))
                                       (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                       (rule "concrete_or_3" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "allLeft" (formula "30") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0,0,0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "30") (term "0"))
                                       (rule "allLeft" (formula "29") (inst "t=j_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0,0,0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "29") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                       (rule "inShort" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (rule "concrete_or_1" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "allLeft" (formula "27") (inst "t=i_1_0"))
                                       (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "59"))
                                       (rule "concrete_or_4" (formula "27"))
                                       (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "58"))
                                       (rule "concrete_or_4" (formula "27"))
                                       (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "27") (term "1"))
                                       (rule "concrete_or_4" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "27") (term "0,0"))
                                       (rule "concrete_and_2" (formula "27") (term "0"))
                                       (rule "concrete_or_2" (formula "27"))
                                       (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "27"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Null Reference (x_arr = null)"
         (rule "false_right" (formula "24"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "21") (term "0,1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "21") (term "1,0,1,0") (ifseqformula "1"))
         (rule "allLeft" (formula "10") (inst "t=depth"))
         (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "1"))
         (rule "concrete_not_1" (formula "10") (term "1"))
         (rule "concrete_or_4" (formula "10"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "6"))
         (rule "qeq_literals" (formula "10") (term "0,0"))
         (rule "concrete_and_2" (formula "10") (term "0"))
         (rule "concrete_or_2" (formula "10"))
         (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "10"))
         (rule "andLeft" (formula "9"))
         (rule "inEqSimp_homoInEq1" (formula "9"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
         (rule "add_literals" (formula "9") (term "1,1,0"))
         (rule "times_zero_1" (formula "9") (term "1,0"))
         (rule "add_literals" (formula "9") (term "0"))
         (rule "leq_literals" (formula "9"))
         (rule "closeFalse" (formula "9"))
      )
   )
   (branch "Null Reference (x_arr_arr = null)"
      (rule "false_right" (formula "24"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "close" (formula "22") (ifseqformula "1"))
   )
   (branch "Index Out of Bounds (x_arr_arr != null, but _depth Out of Bounds!)"
      (rule "false_right" (formula "24"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate2" (formula "1") (term "1"))
      (rule "applyOnRigidFormula" (formula "22"))
      (rule "simplifyUpdate1" (formula "22") (term "1"))
      (rule "applyOnPV" (formula "22") (term "0"))
      (rule "applyOnRigidFormula" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "0,0"))
      (rule "simplifyUpdate1" (formula "1") (term "1,0"))
      (rule "applyOnPV" (formula "1") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0,1"))
      (rule "simplifyUpdate1" (formula "1") (term "1,1"))
      (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
      (rule "applyOnPV" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_and_2" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
      (rule "qeq_literals" (formula "6") (term "0"))
      (rule "concrete_and_2" (formula "6"))
      (rule "closeFalse" (formula "6"))
   )
)
)

}
